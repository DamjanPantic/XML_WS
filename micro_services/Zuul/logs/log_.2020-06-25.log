[2020-06-25T11:46:58.058Z] [org.springframework.boot.SpringApplication] [main] [651] [INFO ] No active profile set, falling back to default profiles: default
[2020-06-25T11:46:59.059Z] [org.springframework.boot.actuate.endpoint.EndpointId] [main] [155] [WARN ] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[2020-06-25T11:46:59.059Z] [org.springframework.boot.actuate.endpoint.EndpointId] [main] [155] [WARN ] Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
[2020-06-25T11:46:59.059Z] [org.springframework.cloud.context.scope.GenericScope] [main] [295] [INFO ] BeanFactory id=2a1c6143-9b4e-3e98-8d75-3d2f53b1f016
[2020-06-25T11:46:59.059Z] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [330] [INFO ] Bean 'com.programatori.zuul.AuthClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2020-06-25T11:46:59.059Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [92] [INFO ] Tomcat initialized with port(s): 8080 (https)
[2020-06-25T11:46:59.059Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T11:46:59.059Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting service [Tomcat]
[2020-06-25T11:46:59.059Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.33]
[2020-06-25T11:46:59.059Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2020-06-25T11:46:59.059Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] [284] [INFO ] Root WebApplicationContext: initialization completed in 1282 ms
[2020-06-25T11:46:59.059Z] [com.netflix.config.sources.URLConfigurationSource] [main] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-06-25T11:46:59.059Z] [com.netflix.config.sources.URLConfigurationSource] [main] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-06-25T11:46:59.059Z] [com.netflix.config.DynamicPropertyFactory] [main] [281] [INFO ] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6661d8c0
[2020-06-25T11:47:00.000Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [main] [72] [INFO ] Setting initial instance status as: STARTING
[2020-06-25T11:47:00.000Z] [com.netflix.discovery.DiscoveryClient] [main] [368] [INFO ] Initializing Eureka in region us-east-1
[2020-06-25T11:47:00.000Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2020-06-25T11:47:00.000Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2020-06-25T11:47:00.000Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2020-06-25T11:47:00.000Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2020-06-25T11:47:00.000Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [main] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-06-25T11:47:00.000Z] [com.netflix.discovery.DiscoveryClient] [main] [981] [INFO ] Disable delta property : false
[2020-06-25T11:47:00.000Z] [com.netflix.discovery.DiscoveryClient] [main] [982] [INFO ] Single vip registry refresh property : null
[2020-06-25T11:47:00.000Z] [com.netflix.discovery.DiscoveryClient] [main] [983] [INFO ] Force full registry fetch : false
[2020-06-25T11:47:00.000Z] [com.netflix.discovery.DiscoveryClient] [main] [984] [INFO ] Application is null : false
[2020-06-25T11:47:00.000Z] [com.netflix.discovery.DiscoveryClient] [main] [985] [INFO ] Registered Applications size is zero : true
[2020-06-25T11:47:00.000Z] [com.netflix.discovery.DiscoveryClient] [main] [987] [INFO ] Application version is -1: true
[2020-06-25T11:47:00.000Z] [com.netflix.discovery.DiscoveryClient] [main] [1070] [INFO ] Getting all instance registry info from the eureka server
[2020-06-25T11:47:00.000Z] [com.netflix.discovery.DiscoveryClient] [main] [1079] [INFO ] The response status is 200
[2020-06-25T11:47:00.000Z] [com.netflix.discovery.DiscoveryClient] [main] [1294] [INFO ] Starting heartbeat executor: renew interval is: 30
[2020-06-25T11:47:00.000Z] [com.netflix.discovery.InstanceInfoReplicator] [main] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2020-06-25T11:47:00.000Z] [com.netflix.discovery.DiscoveryClient] [main] [468] [INFO ] Discovery Client initialized at timestamp 1593078420965 with initial instances count: 7
[2020-06-25T11:47:01.001Z] [com.netflix.config.sources.URLConfigurationSource] [main] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-06-25T11:47:01.001Z] [com.netflix.config.sources.URLConfigurationSource] [main] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-06-25T11:47:01.001Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [main] [181] [INFO ] Initializing ExecutorService 'applicationTaskExecutor'
[2020-06-25T11:47:01.001Z] [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger] [main] [86] [WARN ] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2020-06-25T11:47:01.001Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [main] [67] [INFO ] Starting filter initializer
[2020-06-25T11:47:01.001Z] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [main] [58] [INFO ] Exposing 2 endpoint(s) beneath base path '/actuator'
[2020-06-25T11:47:01.001Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [main] [41] [INFO ] Registering application ZUUL with eureka with status UP
[2020-06-25T11:47:01.001Z] [com.netflix.discovery.DiscoveryClient$3] [main] [1330] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1593078421466, current=UP, previous=STARTING]
[2020-06-25T11:47:01.001Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [847] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080: registering service...
[2020-06-25T11:47:01.001Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T11:47:01.001Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [856] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - registration status: 204
[2020-06-25T11:47:01.001Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [204] [INFO ] Tomcat started on port(s): 8080 (https) with context path '/api'
[2020-06-25T11:47:01.001Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] [main] [145] [INFO ] Updating port to 8080
[2020-06-25T11:47:01.001Z] [org.springframework.boot.StartupInfoLogger] [main] [61] [INFO ] Started ZuulApplication in 3.498 seconds (JVM running for 4.045)
[2020-06-25T11:47:01.001Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(3)-192.168.1.3] [173] [INFO ] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2020-06-25T11:47:01.001Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(3)-192.168.1.3] [525] [INFO ] Initializing Servlet 'dispatcherServlet'
[2020-06-25T11:47:01.001Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(3)-192.168.1.3] [547] [INFO ] Completed initialization in 7 ms
[2020-06-25T11:47:06.006Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-6] [53] [INFO ] POST request to https://localhost:8080/api/auth/login
[2020-06-25T11:47:06.006Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-6] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T11:47:06.006Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [https-jsse-nio-8080-exec-6] [58] [INFO ] Shutdown hook installed for: NFLoadBalancer-PingTimer-auth
[2020-06-25T11:47:06.006Z] [com.netflix.loadbalancer.BaseLoadBalancer] [https-jsse-nio-8080-exec-6] [197] [INFO ] Client: auth instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2020-06-25T11:47:06.006Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-6] [222] [INFO ] Using serverListUpdater PollingServerListUpdater
[2020-06-25T11:47:06.006Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-6] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T11:47:06.006Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-6] [150] [INFO ] DynamicServerListLoadBalancer for client auth initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[192.168.1.3:8081],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.3:8081;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 01:00:00 CET 1970;	First connection made: Thu Jan 01 01:00:00 CET 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4abbdb0c
[2020-06-25T11:47:07.007Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-6] [132] [WARN ] The Hystrix timeout of 60000ms for the command auth is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T11:47:07.007Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [PollingServerListUpdater-0] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T12:14:56.056Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-06-25T12:19:56.056Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-06-25T12:24:56.056Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-06-25T12:27:53.053Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-3] [53] [INFO ] POST request to https://localhost:8080/api/auth/login
[2020-06-25T12:27:54.054Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-3] [132] [WARN ] The Hystrix timeout of 60000ms for the command auth is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:29:36.036Z] [com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2] [Thread-9] [53] [INFO ] Shutting down the Executor Pool for PollingServerListUpdater
[2020-06-25T12:29:36.036Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [SpringContextShutdownHook] [65] [INFO ] Unregistering application ZUUL with eureka with status DOWN
[2020-06-25T12:29:36.036Z] [com.netflix.discovery.DiscoveryClient$3] [SpringContextShutdownHook] [1328] [WARN ] Saw local status change event StatusChangeEvent [timestamp=1593080976577, current=DOWN, previous=UP]
[2020-06-25T12:29:36.036Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [847] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080: registering service...
[2020-06-25T12:29:36.036Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [856] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - registration status: 204
[2020-06-25T12:29:36.036Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [SpringContextShutdownHook] [79] [INFO ] Stopping filter initializer
[2020-06-25T12:29:36.036Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [SpringContextShutdownHook] [218] [INFO ] Shutting down ExecutorService 'applicationTaskExecutor'
[2020-06-25T12:29:36.036Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [SpringContextShutdownHook] [67] [INFO ] Shutdown hook removed for: NFLoadBalancer-PingTimer-auth
[2020-06-25T12:29:36.036Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [SpringContextShutdownHook] [72] [INFO ] Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:241)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1068)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1068)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948)
[2020-06-25T12:29:36.036Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [909] [INFO ] Shutting down DiscoveryClient ...
[2020-06-25T12:29:39.039Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [945] [INFO ] Unregistering ...
[2020-06-25T12:29:39.039Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [947] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - deregister  status: 200
[2020-06-25T12:29:39.039Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [934] [INFO ] Completed shut down of DiscoveryClient
[2020-06-25T12:29:44.044Z] [org.springframework.boot.SpringApplication] [main] [651] [INFO ] No active profile set, falling back to default profiles: default
[2020-06-25T12:29:45.045Z] [org.springframework.boot.actuate.endpoint.EndpointId] [main] [155] [WARN ] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[2020-06-25T12:29:45.045Z] [org.springframework.boot.actuate.endpoint.EndpointId] [main] [155] [WARN ] Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
[2020-06-25T12:29:45.045Z] [org.springframework.cloud.context.scope.GenericScope] [main] [295] [INFO ] BeanFactory id=2a1c6143-9b4e-3e98-8d75-3d2f53b1f016
[2020-06-25T12:29:45.045Z] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [330] [INFO ] Bean 'com.programatori.zuul.AuthClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2020-06-25T12:29:45.045Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [92] [INFO ] Tomcat initialized with port(s): 8080 (https)
[2020-06-25T12:29:45.045Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T12:29:45.045Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting service [Tomcat]
[2020-06-25T12:29:45.045Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.33]
[2020-06-25T12:29:45.045Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2020-06-25T12:29:45.045Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] [284] [INFO ] Root WebApplicationContext: initialization completed in 1282 ms
[2020-06-25T12:29:45.045Z] [com.netflix.config.sources.URLConfigurationSource] [main] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-06-25T12:29:45.045Z] [com.netflix.config.sources.URLConfigurationSource] [main] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-06-25T12:29:45.045Z] [com.netflix.config.DynamicPropertyFactory] [main] [281] [INFO ] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5ba90d8a
[2020-06-25T12:29:46.046Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [main] [72] [INFO ] Setting initial instance status as: STARTING
[2020-06-25T12:29:46.046Z] [com.netflix.discovery.DiscoveryClient] [main] [368] [INFO ] Initializing Eureka in region us-east-1
[2020-06-25T12:29:46.046Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2020-06-25T12:29:46.046Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2020-06-25T12:29:46.046Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2020-06-25T12:29:46.046Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2020-06-25T12:29:46.046Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [main] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-06-25T12:29:46.046Z] [com.netflix.discovery.DiscoveryClient] [main] [981] [INFO ] Disable delta property : false
[2020-06-25T12:29:46.046Z] [com.netflix.discovery.DiscoveryClient] [main] [982] [INFO ] Single vip registry refresh property : null
[2020-06-25T12:29:46.046Z] [com.netflix.discovery.DiscoveryClient] [main] [983] [INFO ] Force full registry fetch : false
[2020-06-25T12:29:46.046Z] [com.netflix.discovery.DiscoveryClient] [main] [984] [INFO ] Application is null : false
[2020-06-25T12:29:46.046Z] [com.netflix.discovery.DiscoveryClient] [main] [985] [INFO ] Registered Applications size is zero : true
[2020-06-25T12:29:46.046Z] [com.netflix.discovery.DiscoveryClient] [main] [987] [INFO ] Application version is -1: true
[2020-06-25T12:29:46.046Z] [com.netflix.discovery.DiscoveryClient] [main] [1070] [INFO ] Getting all instance registry info from the eureka server
[2020-06-25T12:29:46.046Z] [com.netflix.discovery.DiscoveryClient] [main] [1079] [INFO ] The response status is 200
[2020-06-25T12:29:46.046Z] [com.netflix.discovery.DiscoveryClient] [main] [1294] [INFO ] Starting heartbeat executor: renew interval is: 30
[2020-06-25T12:29:46.046Z] [com.netflix.discovery.InstanceInfoReplicator] [main] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2020-06-25T12:29:46.046Z] [com.netflix.discovery.DiscoveryClient] [main] [468] [INFO ] Discovery Client initialized at timestamp 1593080986718 with initial instances count: 7
[2020-06-25T12:29:46.046Z] [com.netflix.config.sources.URLConfigurationSource] [main] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-06-25T12:29:46.046Z] [com.netflix.config.sources.URLConfigurationSource] [main] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-06-25T12:29:46.046Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [main] [181] [INFO ] Initializing ExecutorService 'applicationTaskExecutor'
[2020-06-25T12:29:47.047Z] [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger] [main] [86] [WARN ] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2020-06-25T12:29:47.047Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [main] [67] [INFO ] Starting filter initializer
[2020-06-25T12:29:47.047Z] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [main] [58] [INFO ] Exposing 2 endpoint(s) beneath base path '/actuator'
[2020-06-25T12:29:47.047Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [main] [41] [INFO ] Registering application ZUUL with eureka with status UP
[2020-06-25T12:29:47.047Z] [com.netflix.discovery.DiscoveryClient$3] [main] [1330] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1593080987236, current=UP, previous=STARTING]
[2020-06-25T12:29:47.047Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [847] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080: registering service...
[2020-06-25T12:29:47.047Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T12:29:47.047Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [856] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - registration status: 204
[2020-06-25T12:29:47.047Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [204] [INFO ] Tomcat started on port(s): 8080 (https) with context path '/api'
[2020-06-25T12:29:47.047Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] [main] [145] [INFO ] Updating port to 8080
[2020-06-25T12:29:47.047Z] [org.springframework.boot.StartupInfoLogger] [main] [61] [INFO ] Started ZuulApplication in 3.451 seconds (JVM running for 3.986)
[2020-06-25T12:29:47.047Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(1)-192.168.1.3] [173] [INFO ] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2020-06-25T12:29:47.047Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(1)-192.168.1.3] [525] [INFO ] Initializing Servlet 'dispatcherServlet'
[2020-06-25T12:29:47.047Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(1)-192.168.1.3] [547] [INFO ] Completed initialization in 7 ms
[2020-06-25T12:30:49.049Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-6] [53] [INFO ] POST request to https://localhost:8080/api/auth/login
[2020-06-25T12:30:49.049Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-6] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T12:30:49.049Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [https-jsse-nio-8080-exec-6] [58] [INFO ] Shutdown hook installed for: NFLoadBalancer-PingTimer-auth
[2020-06-25T12:30:49.049Z] [com.netflix.loadbalancer.BaseLoadBalancer] [https-jsse-nio-8080-exec-6] [197] [INFO ] Client: auth instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2020-06-25T12:30:49.049Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-6] [222] [INFO ] Using serverListUpdater PollingServerListUpdater
[2020-06-25T12:30:49.049Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-6] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T12:30:49.049Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-6] [150] [INFO ] DynamicServerListLoadBalancer for client auth initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[192.168.1.3:8081],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.3:8081;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 01:00:00 CET 1970;	First connection made: Thu Jan 01 01:00:00 CET 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3ea69ea4
[2020-06-25T12:30:50.050Z] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] [https-jsse-nio-8080-exec-6] [84] [WARN ] Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.SimpleHostRoutingFilter.handleException(SimpleHostRoutingFilter.java:261)
	at org.springframework.cloud.netflix.zuul.filters.route.SimpleHostRoutingFilter.run(SimpleHostRoutingFilter.java:241)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:45)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.programatori.zuul.XSSFilter.doFilter(XSSFilter.java:19)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:830)
Caused by: javax.net.ssl.SSLHandshakeException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at java.base/sun.security.ssl.Alert.createSSLException(Alert.java:131)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:324)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:267)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:262)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.checkServerCerts(CertificateMessage.java:1339)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.onConsumeCertificate(CertificateMessage.java:1214)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.consume(CertificateMessage.java:1157)
	at java.base/sun.security.ssl.SSLHandshake.consume(SSLHandshake.java:396)
	at java.base/sun.security.ssl.HandshakeContext.dispatch(HandshakeContext.java:444)
	at java.base/sun.security.ssl.HandshakeContext.dispatch(HandshakeContext.java:422)
	at java.base/sun.security.ssl.TransportContext.dispatch(TransportContext.java:181)
	at java.base/sun.security.ssl.SSLTransport.decode(SSLTransport.java:164)
	at java.base/sun.security.ssl.SSLSocketImpl.decode(SSLSocketImpl.java:1460)
	at java.base/sun.security.ssl.SSLSocketImpl.readHandshakeRecord(SSLSocketImpl.java:1368)
	at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:437)
	at org.apache.http.conn.ssl.SSLConnectionSocketFactory.createLayeredSocket(SSLConnectionSocketFactory.java:436)
	at org.apache.http.conn.ssl.SSLConnectionSocketFactory.connectSocket(SSLConnectionSocketFactory.java:384)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.springframework.cloud.netflix.zuul.filters.route.SimpleHostRoutingFilter.forwardRequest(SimpleHostRoutingFilter.java:422)
	at org.springframework.cloud.netflix.zuul.filters.route.SimpleHostRoutingFilter.forward(SimpleHostRoutingFilter.java:341)
	at org.springframework.cloud.netflix.zuul.filters.route.SimpleHostRoutingFilter.run(SimpleHostRoutingFilter.java:236)
	... 61 common frames omitted
Caused by: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at java.base/sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:438)
	at java.base/sun.security.validator.PKIXValidator.engineValidate(PKIXValidator.java:305)
	at java.base/sun.security.validator.Validator.validate(Validator.java:264)
	at java.base/sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:231)
	at java.base/sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:132)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.checkServerCerts(CertificateMessage.java:1323)
	... 84 common frames omitted
Caused by: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at java.base/sun.security.provider.certpath.SunCertPathBuilder.build(SunCertPathBuilder.java:141)
	at java.base/sun.security.provider.certpath.SunCertPathBuilder.engineBuild(SunCertPathBuilder.java:126)
	at java.base/java.security.cert.CertPathBuilder.build(CertPathBuilder.java:297)
	at java.base/sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:433)
	... 89 common frames omitted
[2020-06-25T12:30:50.050Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [PollingServerListUpdater-0] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T12:34:46.046Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-06-25T12:35:40.040Z] [com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2] [Thread-9] [53] [INFO ] Shutting down the Executor Pool for PollingServerListUpdater
[2020-06-25T12:35:40.040Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [SpringContextShutdownHook] [65] [INFO ] Unregistering application ZUUL with eureka with status DOWN
[2020-06-25T12:35:40.040Z] [com.netflix.discovery.DiscoveryClient$3] [SpringContextShutdownHook] [1328] [WARN ] Saw local status change event StatusChangeEvent [timestamp=1593081340450, current=DOWN, previous=UP]
[2020-06-25T12:35:40.040Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [847] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080: registering service...
[2020-06-25T12:35:40.040Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [SpringContextShutdownHook] [79] [INFO ] Stopping filter initializer
[2020-06-25T12:35:40.040Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [856] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - registration status: 204
[2020-06-25T12:35:40.040Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [SpringContextShutdownHook] [218] [INFO ] Shutting down ExecutorService 'applicationTaskExecutor'
[2020-06-25T12:35:40.040Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [SpringContextShutdownHook] [67] [INFO ] Shutdown hook removed for: NFLoadBalancer-PingTimer-auth
[2020-06-25T12:35:40.040Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [SpringContextShutdownHook] [72] [INFO ] Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:241)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1068)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1068)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948)
[2020-06-25T12:35:40.040Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [909] [INFO ] Shutting down DiscoveryClient ...
[2020-06-25T12:35:43.043Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [945] [INFO ] Unregistering ...
[2020-06-25T12:35:43.043Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [947] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - deregister  status: 200
[2020-06-25T12:35:43.043Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [934] [INFO ] Completed shut down of DiscoveryClient
[2020-06-25T12:35:50.050Z] [org.springframework.boot.SpringApplication] [main] [651] [INFO ] No active profile set, falling back to default profiles: default
[2020-06-25T12:35:51.051Z] [org.springframework.boot.actuate.endpoint.EndpointId] [main] [155] [WARN ] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[2020-06-25T12:35:51.051Z] [org.springframework.boot.actuate.endpoint.EndpointId] [main] [155] [WARN ] Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
[2020-06-25T12:35:51.051Z] [org.springframework.cloud.context.scope.GenericScope] [main] [295] [INFO ] BeanFactory id=21717a2c-1a0d-34a1-be9a-a88300360682
[2020-06-25T12:35:51.051Z] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [330] [INFO ] Bean 'com.programatori.zuul.AuthClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2020-06-25T12:35:52.052Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [92] [INFO ] Tomcat initialized with port(s): 8080 (https)
[2020-06-25T12:35:52.052Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T12:35:52.052Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting service [Tomcat]
[2020-06-25T12:35:52.052Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.33]
[2020-06-25T12:35:52.052Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2020-06-25T12:35:52.052Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] [284] [INFO ] Root WebApplicationContext: initialization completed in 1348 ms
[2020-06-25T12:35:52.052Z] [com.netflix.config.sources.URLConfigurationSource] [main] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-06-25T12:35:52.052Z] [com.netflix.config.sources.URLConfigurationSource] [main] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-06-25T12:35:52.052Z] [com.netflix.config.DynamicPropertyFactory] [main] [281] [INFO ] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@100ad67e
[2020-06-25T12:35:52.052Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [main] [72] [INFO ] Setting initial instance status as: STARTING
[2020-06-25T12:35:52.052Z] [com.netflix.discovery.DiscoveryClient] [main] [368] [INFO ] Initializing Eureka in region us-east-1
[2020-06-25T12:35:52.052Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2020-06-25T12:35:52.052Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2020-06-25T12:35:53.053Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2020-06-25T12:35:53.053Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2020-06-25T12:35:53.053Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [main] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-06-25T12:35:53.053Z] [com.netflix.discovery.DiscoveryClient] [main] [981] [INFO ] Disable delta property : false
[2020-06-25T12:35:53.053Z] [com.netflix.discovery.DiscoveryClient] [main] [982] [INFO ] Single vip registry refresh property : null
[2020-06-25T12:35:53.053Z] [com.netflix.discovery.DiscoveryClient] [main] [983] [INFO ] Force full registry fetch : false
[2020-06-25T12:35:53.053Z] [com.netflix.discovery.DiscoveryClient] [main] [984] [INFO ] Application is null : false
[2020-06-25T12:35:53.053Z] [com.netflix.discovery.DiscoveryClient] [main] [985] [INFO ] Registered Applications size is zero : true
[2020-06-25T12:35:53.053Z] [com.netflix.discovery.DiscoveryClient] [main] [987] [INFO ] Application version is -1: true
[2020-06-25T12:35:53.053Z] [com.netflix.discovery.DiscoveryClient] [main] [1070] [INFO ] Getting all instance registry info from the eureka server
[2020-06-25T12:35:53.053Z] [com.netflix.discovery.DiscoveryClient] [main] [1079] [INFO ] The response status is 200
[2020-06-25T12:35:53.053Z] [com.netflix.discovery.DiscoveryClient] [main] [1294] [INFO ] Starting heartbeat executor: renew interval is: 30
[2020-06-25T12:35:53.053Z] [com.netflix.discovery.InstanceInfoReplicator] [main] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2020-06-25T12:35:53.053Z] [com.netflix.discovery.DiscoveryClient] [main] [468] [INFO ] Discovery Client initialized at timestamp 1593081353345 with initial instances count: 7
[2020-06-25T12:35:53.053Z] [com.netflix.config.sources.URLConfigurationSource] [main] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-06-25T12:35:53.053Z] [com.netflix.config.sources.URLConfigurationSource] [main] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-06-25T12:35:53.053Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [main] [181] [INFO ] Initializing ExecutorService 'applicationTaskExecutor'
[2020-06-25T12:35:53.053Z] [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger] [main] [86] [WARN ] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2020-06-25T12:35:53.053Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [main] [67] [INFO ] Starting filter initializer
[2020-06-25T12:35:53.053Z] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [main] [58] [INFO ] Exposing 2 endpoint(s) beneath base path '/actuator'
[2020-06-25T12:35:53.053Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [main] [41] [INFO ] Registering application ZUUL with eureka with status UP
[2020-06-25T12:35:53.053Z] [com.netflix.discovery.DiscoveryClient$3] [main] [1330] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1593081353891, current=UP, previous=STARTING]
[2020-06-25T12:35:53.053Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [847] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080: registering service...
[2020-06-25T12:35:53.053Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T12:35:53.053Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [856] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - registration status: 204
[2020-06-25T12:35:53.053Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [204] [INFO ] Tomcat started on port(s): 8080 (https) with context path '/api'
[2020-06-25T12:35:53.053Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] [main] [145] [INFO ] Updating port to 8080
[2020-06-25T12:35:53.053Z] [org.springframework.boot.StartupInfoLogger] [main] [61] [INFO ] Started ZuulApplication in 3.712 seconds (JVM running for 4.212)
[2020-06-25T12:35:54.054Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(2)-192.168.1.3] [173] [INFO ] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2020-06-25T12:35:54.054Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(2)-192.168.1.3] [525] [INFO ] Initializing Servlet 'dispatcherServlet'
[2020-06-25T12:35:54.054Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(2)-192.168.1.3] [547] [INFO ] Completed initialization in 11 ms
[2020-06-25T12:36:03.003Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-6] [53] [INFO ] POST request to https://localhost:8080/api/auth/login
[2020-06-25T12:36:03.003Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-6] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T12:36:03.003Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [https-jsse-nio-8080-exec-6] [58] [INFO ] Shutdown hook installed for: NFLoadBalancer-PingTimer-auth
[2020-06-25T12:36:03.003Z] [com.netflix.loadbalancer.BaseLoadBalancer] [https-jsse-nio-8080-exec-6] [197] [INFO ] Client: auth instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2020-06-25T12:36:03.003Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-6] [222] [INFO ] Using serverListUpdater PollingServerListUpdater
[2020-06-25T12:36:03.003Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-6] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T12:36:03.003Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-6] [150] [INFO ] DynamicServerListLoadBalancer for client auth initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[192.168.1.3:8081],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.3:8081;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 01:00:00 CET 1970;	First connection made: Thu Jan 01 01:00:00 CET 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@449e7b24
[2020-06-25T12:36:03.003Z] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] [https-jsse-nio-8080-exec-6] [84] [WARN ] Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.SimpleHostRoutingFilter.handleException(SimpleHostRoutingFilter.java:261)
	at org.springframework.cloud.netflix.zuul.filters.route.SimpleHostRoutingFilter.run(SimpleHostRoutingFilter.java:241)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:45)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.programatori.zuul.XSSFilter.doFilter(XSSFilter.java:19)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:830)
Caused by: javax.net.ssl.SSLPeerUnverifiedException: Certificate for <localhost> doesn't match any of the subject alternative names: []
	at org.apache.http.conn.ssl.SSLConnectionSocketFactory.verifyHostname(SSLConnectionSocketFactory.java:507)
	at org.apache.http.conn.ssl.SSLConnectionSocketFactory.createLayeredSocket(SSLConnectionSocketFactory.java:437)
	at org.apache.http.conn.ssl.SSLConnectionSocketFactory.connectSocket(SSLConnectionSocketFactory.java:384)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.springframework.cloud.netflix.zuul.filters.route.SimpleHostRoutingFilter.forwardRequest(SimpleHostRoutingFilter.java:422)
	at org.springframework.cloud.netflix.zuul.filters.route.SimpleHostRoutingFilter.forward(SimpleHostRoutingFilter.java:341)
	at org.springframework.cloud.netflix.zuul.filters.route.SimpleHostRoutingFilter.run(SimpleHostRoutingFilter.java:236)
	... 61 common frames omitted
[2020-06-25T12:36:04.004Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [PollingServerListUpdater-0] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T12:40:53.053Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-06-25T12:43:11.011Z] [com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2] [Thread-9] [53] [INFO ] Shutting down the Executor Pool for PollingServerListUpdater
[2020-06-25T12:43:11.011Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [SpringContextShutdownHook] [65] [INFO ] Unregistering application ZUUL with eureka with status DOWN
[2020-06-25T12:43:11.011Z] [com.netflix.discovery.DiscoveryClient$3] [SpringContextShutdownHook] [1328] [WARN ] Saw local status change event StatusChangeEvent [timestamp=1593081791173, current=DOWN, previous=UP]
[2020-06-25T12:43:11.011Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [847] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080: registering service...
[2020-06-25T12:43:11.011Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [SpringContextShutdownHook] [79] [INFO ] Stopping filter initializer
[2020-06-25T12:43:11.011Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [856] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - registration status: 204
[2020-06-25T12:43:11.011Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [SpringContextShutdownHook] [218] [INFO ] Shutting down ExecutorService 'applicationTaskExecutor'
[2020-06-25T12:43:11.011Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [SpringContextShutdownHook] [67] [INFO ] Shutdown hook removed for: NFLoadBalancer-PingTimer-auth
[2020-06-25T12:43:11.011Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [SpringContextShutdownHook] [72] [INFO ] Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:241)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1068)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1068)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948)
[2020-06-25T12:43:11.011Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [909] [INFO ] Shutting down DiscoveryClient ...
[2020-06-25T12:43:14.014Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [945] [INFO ] Unregistering ...
[2020-06-25T12:43:14.014Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [947] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - deregister  status: 200
[2020-06-25T12:43:14.014Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [934] [INFO ] Completed shut down of DiscoveryClient
[2020-06-25T12:43:24.024Z] [org.springframework.boot.SpringApplication] [main] [651] [INFO ] No active profile set, falling back to default profiles: default
[2020-06-25T12:43:25.025Z] [org.springframework.boot.actuate.endpoint.EndpointId] [main] [155] [WARN ] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[2020-06-25T12:43:25.025Z] [org.springframework.boot.actuate.endpoint.EndpointId] [main] [155] [WARN ] Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
[2020-06-25T12:43:25.025Z] [org.springframework.cloud.context.scope.GenericScope] [main] [295] [INFO ] BeanFactory id=21717a2c-1a0d-34a1-be9a-a88300360682
[2020-06-25T12:43:25.025Z] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [330] [INFO ] Bean 'com.programatori.zuul.AuthClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2020-06-25T12:43:26.026Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [92] [INFO ] Tomcat initialized with port(s): 8080 (https)
[2020-06-25T12:43:26.026Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T12:43:26.026Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting service [Tomcat]
[2020-06-25T12:43:26.026Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.33]
[2020-06-25T12:43:26.026Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2020-06-25T12:43:26.026Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] [284] [INFO ] Root WebApplicationContext: initialization completed in 1321 ms
[2020-06-25T12:43:26.026Z] [com.netflix.config.sources.URLConfigurationSource] [main] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-06-25T12:43:26.026Z] [com.netflix.config.sources.URLConfigurationSource] [main] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-06-25T12:43:26.026Z] [com.netflix.config.DynamicPropertyFactory] [main] [281] [INFO ] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@28babeca
[2020-06-25T12:43:26.026Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [main] [72] [INFO ] Setting initial instance status as: STARTING
[2020-06-25T12:43:26.026Z] [com.netflix.discovery.DiscoveryClient] [main] [368] [INFO ] Initializing Eureka in region us-east-1
[2020-06-25T12:43:26.026Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2020-06-25T12:43:26.026Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2020-06-25T12:43:26.026Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2020-06-25T12:43:26.026Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2020-06-25T12:43:27.027Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [main] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-06-25T12:43:27.027Z] [com.netflix.discovery.DiscoveryClient] [main] [981] [INFO ] Disable delta property : false
[2020-06-25T12:43:27.027Z] [com.netflix.discovery.DiscoveryClient] [main] [982] [INFO ] Single vip registry refresh property : null
[2020-06-25T12:43:27.027Z] [com.netflix.discovery.DiscoveryClient] [main] [983] [INFO ] Force full registry fetch : false
[2020-06-25T12:43:27.027Z] [com.netflix.discovery.DiscoveryClient] [main] [984] [INFO ] Application is null : false
[2020-06-25T12:43:27.027Z] [com.netflix.discovery.DiscoveryClient] [main] [985] [INFO ] Registered Applications size is zero : true
[2020-06-25T12:43:27.027Z] [com.netflix.discovery.DiscoveryClient] [main] [987] [INFO ] Application version is -1: true
[2020-06-25T12:43:27.027Z] [com.netflix.discovery.DiscoveryClient] [main] [1070] [INFO ] Getting all instance registry info from the eureka server
[2020-06-25T12:43:27.027Z] [com.netflix.discovery.DiscoveryClient] [main] [1079] [INFO ] The response status is 200
[2020-06-25T12:43:27.027Z] [com.netflix.discovery.DiscoveryClient] [main] [1294] [INFO ] Starting heartbeat executor: renew interval is: 30
[2020-06-25T12:43:27.027Z] [com.netflix.discovery.InstanceInfoReplicator] [main] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2020-06-25T12:43:27.027Z] [com.netflix.discovery.DiscoveryClient] [main] [468] [INFO ] Discovery Client initialized at timestamp 1593081807280 with initial instances count: 7
[2020-06-25T12:43:27.027Z] [com.netflix.config.sources.URLConfigurationSource] [main] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-06-25T12:43:27.027Z] [com.netflix.config.sources.URLConfigurationSource] [main] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-06-25T12:43:27.027Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [main] [181] [INFO ] Initializing ExecutorService 'applicationTaskExecutor'
[2020-06-25T12:43:28.028Z] [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger] [main] [86] [WARN ] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2020-06-25T12:43:28.028Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [main] [67] [INFO ] Starting filter initializer
[2020-06-25T12:43:28.028Z] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [main] [58] [INFO ] Exposing 2 endpoint(s) beneath base path '/actuator'
[2020-06-25T12:43:28.028Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [main] [41] [INFO ] Registering application ZUUL with eureka with status UP
[2020-06-25T12:43:28.028Z] [com.netflix.discovery.DiscoveryClient$3] [main] [1330] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1593081808258, current=UP, previous=STARTING]
[2020-06-25T12:43:28.028Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [847] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080: registering service...
[2020-06-25T12:43:28.028Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T12:43:28.028Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [856] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - registration status: 204
[2020-06-25T12:43:28.028Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [204] [INFO ] Tomcat started on port(s): 8080 (https) with context path '/api'
[2020-06-25T12:43:28.028Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] [main] [145] [INFO ] Updating port to 8080
[2020-06-25T12:43:28.028Z] [org.springframework.boot.StartupInfoLogger] [main] [61] [INFO ] Started ZuulApplication in 4.148 seconds (JVM running for 4.691)
[2020-06-25T12:43:28.028Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(1)-192.168.1.3] [173] [INFO ] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2020-06-25T12:43:28.028Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(1)-192.168.1.3] [525] [INFO ] Initializing Servlet 'dispatcherServlet'
[2020-06-25T12:43:28.028Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(1)-192.168.1.3] [547] [INFO ] Completed initialization in 7 ms
[2020-06-25T12:43:32.032Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-6] [53] [INFO ] POST request to https://localhost:8080/api/auth/login
[2020-06-25T12:43:32.032Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-6] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T12:43:32.032Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [https-jsse-nio-8080-exec-6] [58] [INFO ] Shutdown hook installed for: NFLoadBalancer-PingTimer-auth
[2020-06-25T12:43:32.032Z] [com.netflix.loadbalancer.BaseLoadBalancer] [https-jsse-nio-8080-exec-6] [197] [INFO ] Client: auth instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2020-06-25T12:43:32.032Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-6] [222] [INFO ] Using serverListUpdater PollingServerListUpdater
[2020-06-25T12:43:32.032Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-6] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T12:43:32.032Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-6] [150] [INFO ] DynamicServerListLoadBalancer for client auth initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[192.168.1.3:8081],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.3:8081;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 01:00:00 CET 1970;	First connection made: Thu Jan 01 01:00:00 CET 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@61d199da
[2020-06-25T12:43:32.032Z] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] [https-jsse-nio-8080-exec-6] [84] [WARN ] Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.SimpleHostRoutingFilter.handleException(SimpleHostRoutingFilter.java:261)
	at org.springframework.cloud.netflix.zuul.filters.route.SimpleHostRoutingFilter.run(SimpleHostRoutingFilter.java:241)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:45)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.programatori.zuul.XSSFilter.doFilter(XSSFilter.java:19)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:830)
Caused by: javax.net.ssl.SSLPeerUnverifiedException: Certificate for <localhost> doesn't match any of the subject alternative names: []
	at org.apache.http.conn.ssl.SSLConnectionSocketFactory.verifyHostname(SSLConnectionSocketFactory.java:507)
	at org.apache.http.conn.ssl.SSLConnectionSocketFactory.createLayeredSocket(SSLConnectionSocketFactory.java:437)
	at org.apache.http.conn.ssl.SSLConnectionSocketFactory.connectSocket(SSLConnectionSocketFactory.java:384)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.springframework.cloud.netflix.zuul.filters.route.SimpleHostRoutingFilter.forwardRequest(SimpleHostRoutingFilter.java:422)
	at org.springframework.cloud.netflix.zuul.filters.route.SimpleHostRoutingFilter.forward(SimpleHostRoutingFilter.java:341)
	at org.springframework.cloud.netflix.zuul.filters.route.SimpleHostRoutingFilter.run(SimpleHostRoutingFilter.java:236)
	... 61 common frames omitted
[2020-06-25T12:43:33.033Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [PollingServerListUpdater-0] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T12:44:59.059Z] [com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2] [Thread-9] [53] [INFO ] Shutting down the Executor Pool for PollingServerListUpdater
[2020-06-25T12:44:59.059Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [SpringContextShutdownHook] [65] [INFO ] Unregistering application ZUUL with eureka with status DOWN
[2020-06-25T12:44:59.059Z] [com.netflix.discovery.DiscoveryClient$3] [SpringContextShutdownHook] [1328] [WARN ] Saw local status change event StatusChangeEvent [timestamp=1593081899323, current=DOWN, previous=UP]
[2020-06-25T12:44:59.059Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [847] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080: registering service...
[2020-06-25T12:44:59.059Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [SpringContextShutdownHook] [79] [INFO ] Stopping filter initializer
[2020-06-25T12:44:59.059Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [856] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - registration status: 204
[2020-06-25T12:44:59.059Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [SpringContextShutdownHook] [218] [INFO ] Shutting down ExecutorService 'applicationTaskExecutor'
[2020-06-25T12:44:59.059Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [SpringContextShutdownHook] [67] [INFO ] Shutdown hook removed for: NFLoadBalancer-PingTimer-auth
[2020-06-25T12:44:59.059Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [SpringContextShutdownHook] [72] [INFO ] Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:241)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1068)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1068)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948)
[2020-06-25T12:44:59.059Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [909] [INFO ] Shutting down DiscoveryClient ...
[2020-06-25T12:45:02.002Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [945] [INFO ] Unregistering ...
[2020-06-25T12:45:02.002Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [947] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - deregister  status: 200
[2020-06-25T12:45:02.002Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [934] [INFO ] Completed shut down of DiscoveryClient
[2020-06-25T12:45:06.006Z] [org.springframework.boot.SpringApplication] [main] [651] [INFO ] No active profile set, falling back to default profiles: default
[2020-06-25T12:45:07.007Z] [org.springframework.boot.actuate.endpoint.EndpointId] [main] [155] [WARN ] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[2020-06-25T12:45:07.007Z] [org.springframework.boot.actuate.endpoint.EndpointId] [main] [155] [WARN ] Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
[2020-06-25T12:45:07.007Z] [org.springframework.cloud.context.scope.GenericScope] [main] [295] [INFO ] BeanFactory id=21717a2c-1a0d-34a1-be9a-a88300360682
[2020-06-25T12:45:07.007Z] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [330] [INFO ] Bean 'com.programatori.zuul.AuthClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2020-06-25T12:45:07.007Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [92] [INFO ] Tomcat initialized with port(s): 8080 (https)
[2020-06-25T12:45:07.007Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T12:45:07.007Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting service [Tomcat]
[2020-06-25T12:45:07.007Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.33]
[2020-06-25T12:45:07.007Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2020-06-25T12:45:07.007Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] [284] [INFO ] Root WebApplicationContext: initialization completed in 1319 ms
[2020-06-25T12:45:08.008Z] [com.netflix.config.sources.URLConfigurationSource] [main] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-06-25T12:45:08.008Z] [com.netflix.config.sources.URLConfigurationSource] [main] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-06-25T12:45:08.008Z] [com.netflix.config.DynamicPropertyFactory] [main] [281] [INFO ] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3292d91a
[2020-06-25T12:45:08.008Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [main] [72] [INFO ] Setting initial instance status as: STARTING
[2020-06-25T12:45:08.008Z] [com.netflix.discovery.DiscoveryClient] [main] [368] [INFO ] Initializing Eureka in region us-east-1
[2020-06-25T12:45:08.008Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2020-06-25T12:45:08.008Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2020-06-25T12:45:08.008Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2020-06-25T12:45:08.008Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2020-06-25T12:45:08.008Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [main] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-06-25T12:45:08.008Z] [com.netflix.discovery.DiscoveryClient] [main] [981] [INFO ] Disable delta property : false
[2020-06-25T12:45:08.008Z] [com.netflix.discovery.DiscoveryClient] [main] [982] [INFO ] Single vip registry refresh property : null
[2020-06-25T12:45:08.008Z] [com.netflix.discovery.DiscoveryClient] [main] [983] [INFO ] Force full registry fetch : false
[2020-06-25T12:45:08.008Z] [com.netflix.discovery.DiscoveryClient] [main] [984] [INFO ] Application is null : false
[2020-06-25T12:45:08.008Z] [com.netflix.discovery.DiscoveryClient] [main] [985] [INFO ] Registered Applications size is zero : true
[2020-06-25T12:45:08.008Z] [com.netflix.discovery.DiscoveryClient] [main] [987] [INFO ] Application version is -1: true
[2020-06-25T12:45:08.008Z] [com.netflix.discovery.DiscoveryClient] [main] [1070] [INFO ] Getting all instance registry info from the eureka server
[2020-06-25T12:45:09.009Z] [com.netflix.discovery.DiscoveryClient] [main] [1079] [INFO ] The response status is 200
[2020-06-25T12:45:09.009Z] [com.netflix.discovery.DiscoveryClient] [main] [1294] [INFO ] Starting heartbeat executor: renew interval is: 30
[2020-06-25T12:45:09.009Z] [com.netflix.discovery.InstanceInfoReplicator] [main] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2020-06-25T12:45:09.009Z] [com.netflix.discovery.DiscoveryClient] [main] [468] [INFO ] Discovery Client initialized at timestamp 1593081909062 with initial instances count: 6
[2020-06-25T12:45:09.009Z] [com.netflix.config.sources.URLConfigurationSource] [main] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-06-25T12:45:09.009Z] [com.netflix.config.sources.URLConfigurationSource] [main] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-06-25T12:45:09.009Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [main] [181] [INFO ] Initializing ExecutorService 'applicationTaskExecutor'
[2020-06-25T12:45:09.009Z] [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger] [main] [86] [WARN ] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2020-06-25T12:45:09.009Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [main] [67] [INFO ] Starting filter initializer
[2020-06-25T12:45:09.009Z] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [main] [58] [INFO ] Exposing 2 endpoint(s) beneath base path '/actuator'
[2020-06-25T12:45:10.010Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [main] [41] [INFO ] Registering application ZUUL with eureka with status UP
[2020-06-25T12:45:10.010Z] [com.netflix.discovery.DiscoveryClient$3] [main] [1330] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1593081910041, current=UP, previous=STARTING]
[2020-06-25T12:45:10.010Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [847] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080: registering service...
[2020-06-25T12:45:10.010Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T12:45:10.010Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [856] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - registration status: 204
[2020-06-25T12:45:10.010Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Pausing ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T12:45:10.010Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Stopping service [Tomcat]
[2020-06-25T12:45:10.010Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [WARN ] The web application [api] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@13.0.2/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@13.0.2/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194)
 java.base@13.0.2/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2081)
 java.base@13.0.2/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:433)
 java.base@13.0.2/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@13.0.2/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@13.0.2/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@13.0.2/java.lang.Thread.run(Thread.java:830)
[2020-06-25T12:45:10.010Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [WARN ] The web application [api] appears to have started a thread named [RxIoScheduler-1 (Evictor)] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@13.0.2/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@13.0.2/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:235)
 java.base@13.0.2/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@13.0.2/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@13.0.2/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@13.0.2/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@13.0.2/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@13.0.2/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@13.0.2/java.lang.Thread.run(Thread.java:830)
[2020-06-25T12:45:10.010Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Stopping ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T12:45:10.010Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Destroying ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T12:45:10.010Z] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener] [main] [136] [INFO ] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[2020-06-25T12:45:10.010Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [main] [65] [INFO ] Unregistering application ZUUL with eureka with status DOWN
[2020-06-25T12:45:10.010Z] [com.netflix.discovery.DiscoveryClient$3] [main] [1328] [WARN ] Saw local status change event StatusChangeEvent [timestamp=1593081910200, current=DOWN, previous=UP]
[2020-06-25T12:45:10.010Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [847] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080: registering service...
[2020-06-25T12:45:10.010Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [main] [79] [INFO ] Stopping filter initializer
[2020-06-25T12:45:10.010Z] [org.springframework.beans.factory.support.DisposableBeanAdapter] [main] [267] [WARN ] Invocation of destroy method failed on bean with name 'tomcatMetricsBinder': java.lang.NullPointerException
[2020-06-25T12:45:10.010Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [main] [218] [INFO ] Shutting down ExecutorService 'applicationTaskExecutor'
[2020-06-25T12:45:10.010Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [856] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - registration status: 204
[2020-06-25T12:45:10.010Z] [com.netflix.discovery.DiscoveryClient] [main] [909] [INFO ] Shutting down DiscoveryClient ...
[2020-06-25T12:45:13.013Z] [com.netflix.discovery.DiscoveryClient] [main] [945] [INFO ] Unregistering ...
[2020-06-25T12:45:13.013Z] [com.netflix.discovery.DiscoveryClient] [main] [947] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - deregister  status: 200
[2020-06-25T12:45:13.013Z] [com.netflix.discovery.DiscoveryClient] [main] [934] [INFO ] Completed shut down of DiscoveryClient
[2020-06-25T12:45:13.013Z] [org.springframework.boot.SpringApplication] [main] [826] [ERROR] Application run failed
org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat server
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:215)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:297)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:163)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.programatori.zuul.ZuulApplication.main(ZuulApplication.java:37)
Caused by: java.lang.IllegalArgumentException: standardService.connector.startFailed
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:231)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:278)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:197)
	... 10 common frames omitted
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1038)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:227)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: Private key must be accompanied by certificate chain
	at org.apache.tomcat.util.net.AbstractJsseEndpoint.createSSLContext(AbstractJsseEndpoint.java:99)
	at org.apache.tomcat.util.net.AbstractJsseEndpoint.initialiseSsl(AbstractJsseEndpoint.java:71)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:217)
	at org.apache.tomcat.util.net.AbstractEndpoint.bindWithCleanup(AbstractEndpoint.java:1141)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1227)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:592)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1035)
	... 14 common frames omitted
Caused by: java.lang.IllegalArgumentException: Private key must be accompanied by certificate chain
	at java.base/java.security.KeyStore.setKeyEntry(KeyStore.java:1163)
	at org.apache.tomcat.util.net.SSLUtilBase.getKeyManagers(SSLUtilBase.java:357)
	at org.apache.tomcat.util.net.SSLUtilBase.createSSLContext(SSLUtilBase.java:247)
	at org.apache.tomcat.util.net.AbstractJsseEndpoint.createSSLContext(AbstractJsseEndpoint.java:97)
	... 20 common frames omitted
[2020-06-25T12:47:09.009Z] [org.springframework.boot.SpringApplication] [main] [651] [INFO ] No active profile set, falling back to default profiles: default
[2020-06-25T12:47:10.010Z] [org.springframework.boot.actuate.endpoint.EndpointId] [main] [155] [WARN ] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[2020-06-25T12:47:10.010Z] [org.springframework.boot.actuate.endpoint.EndpointId] [main] [155] [WARN ] Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
[2020-06-25T12:47:10.010Z] [org.springframework.cloud.context.scope.GenericScope] [main] [295] [INFO ] BeanFactory id=21717a2c-1a0d-34a1-be9a-a88300360682
[2020-06-25T12:47:10.010Z] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [330] [INFO ] Bean 'com.programatori.zuul.AuthClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2020-06-25T12:47:11.011Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [92] [INFO ] Tomcat initialized with port(s): 8080 (https)
[2020-06-25T12:47:11.011Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T12:47:11.011Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting service [Tomcat]
[2020-06-25T12:47:11.011Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.33]
[2020-06-25T12:47:11.011Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2020-06-25T12:47:11.011Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] [284] [INFO ] Root WebApplicationContext: initialization completed in 1586 ms
[2020-06-25T12:47:11.011Z] [com.netflix.config.sources.URLConfigurationSource] [main] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-06-25T12:47:11.011Z] [com.netflix.config.sources.URLConfigurationSource] [main] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-06-25T12:47:11.011Z] [com.netflix.config.DynamicPropertyFactory] [main] [281] [INFO ] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@721d5b74
[2020-06-25T12:47:11.011Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [main] [72] [INFO ] Setting initial instance status as: STARTING
[2020-06-25T12:47:11.011Z] [com.netflix.discovery.DiscoveryClient] [main] [368] [INFO ] Initializing Eureka in region us-east-1
[2020-06-25T12:47:11.011Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2020-06-25T12:47:11.011Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2020-06-25T12:47:12.012Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2020-06-25T12:47:12.012Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2020-06-25T12:47:12.012Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [main] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-06-25T12:47:12.012Z] [com.netflix.discovery.DiscoveryClient] [main] [981] [INFO ] Disable delta property : false
[2020-06-25T12:47:12.012Z] [com.netflix.discovery.DiscoveryClient] [main] [982] [INFO ] Single vip registry refresh property : null
[2020-06-25T12:47:12.012Z] [com.netflix.discovery.DiscoveryClient] [main] [983] [INFO ] Force full registry fetch : false
[2020-06-25T12:47:12.012Z] [com.netflix.discovery.DiscoveryClient] [main] [984] [INFO ] Application is null : false
[2020-06-25T12:47:12.012Z] [com.netflix.discovery.DiscoveryClient] [main] [985] [INFO ] Registered Applications size is zero : true
[2020-06-25T12:47:12.012Z] [com.netflix.discovery.DiscoveryClient] [main] [987] [INFO ] Application version is -1: true
[2020-06-25T12:47:12.012Z] [com.netflix.discovery.DiscoveryClient] [main] [1070] [INFO ] Getting all instance registry info from the eureka server
[2020-06-25T12:47:12.012Z] [com.netflix.discovery.DiscoveryClient] [main] [1079] [INFO ] The response status is 200
[2020-06-25T12:47:12.012Z] [com.netflix.discovery.DiscoveryClient] [main] [1294] [INFO ] Starting heartbeat executor: renew interval is: 30
[2020-06-25T12:47:12.012Z] [com.netflix.discovery.InstanceInfoReplicator] [main] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2020-06-25T12:47:12.012Z] [com.netflix.discovery.DiscoveryClient] [main] [468] [INFO ] Discovery Client initialized at timestamp 1593082032330 with initial instances count: 6
[2020-06-25T12:47:12.012Z] [org.springframework.context.support.AbstractApplicationContext] [main] [558] [WARN ] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'zuulHttpClient' defined in com.programatori.zuul.ZuulApplication: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.http.impl.client.CloseableHttpClient]: Factory method 'zuulHttpClient' threw exception; nested exception is java.io.FileNotFoundException: class path resource [identity.jks] cannot be opened because it does not exist
[2020-06-25T12:47:12.012Z] [com.netflix.discovery.DiscoveryClient] [main] [909] [INFO ] Shutting down DiscoveryClient ...
[2020-06-25T12:47:15.015Z] [com.netflix.discovery.DiscoveryClient] [main] [945] [INFO ] Unregistering ...
[2020-06-25T12:47:15.015Z] [com.netflix.discovery.DiscoveryClient] [main] [947] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - deregister  status: 404
[2020-06-25T12:47:15.015Z] [com.netflix.discovery.DiscoveryClient] [main] [934] [INFO ] Completed shut down of DiscoveryClient
[2020-06-25T12:47:15.015Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Stopping service [Tomcat]
[2020-06-25T12:47:15.015Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [WARN ] The web application [api] appears to have started a thread named [RxIoScheduler-1 (Evictor)] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@13.0.2/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@13.0.2/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:235)
 java.base@13.0.2/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@13.0.2/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@13.0.2/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@13.0.2/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@13.0.2/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@13.0.2/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@13.0.2/java.lang.Thread.run(Thread.java:830)
[2020-06-25T12:47:15.015Z] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener] [main] [136] [INFO ] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[2020-06-25T12:47:15.015Z] [org.springframework.boot.SpringApplication] [main] [826] [ERROR] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'zuulHttpClient' defined in com.programatori.zuul.ZuulApplication: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.http.impl.client.CloseableHttpClient]: Factory method 'zuulHttpClient' threw exception; nested exception is java.io.FileNotFoundException: class path resource [identity.jks] cannot be opened because it does not exist
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:656)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:484)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:882)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.programatori.zuul.ZuulApplication.main(ZuulApplication.java:37)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.http.impl.client.CloseableHttpClient]: Factory method 'zuulHttpClient' threw exception; nested exception is java.io.FileNotFoundException: class path resource [identity.jks] cannot be opened because it does not exist
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	... 19 common frames omitted
Caused by: java.io.FileNotFoundException: class path resource [identity.jks] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:180)
	at com.programatori.zuul.ZuulApplication.zuulHttpClient(ZuulApplication.java:74)
	at com.programatori.zuul.ZuulApplication$$EnhancerBySpringCGLIB$$f2916e02.CGLIB$zuulHttpClient$2(<generated>)
	at com.programatori.zuul.ZuulApplication$$EnhancerBySpringCGLIB$$f2916e02$$FastClassBySpringCGLIB$$c4850d1a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.programatori.zuul.ZuulApplication$$EnhancerBySpringCGLIB$$f2916e02.zuulHttpClient(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 20 common frames omitted
[2020-06-25T12:47:38.038Z] [org.springframework.boot.SpringApplication] [main] [651] [INFO ] No active profile set, falling back to default profiles: default
[2020-06-25T12:47:39.039Z] [org.springframework.boot.actuate.endpoint.EndpointId] [main] [155] [WARN ] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[2020-06-25T12:47:39.039Z] [org.springframework.boot.actuate.endpoint.EndpointId] [main] [155] [WARN ] Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
[2020-06-25T12:47:39.039Z] [org.springframework.cloud.context.scope.GenericScope] [main] [295] [INFO ] BeanFactory id=2a1c6143-9b4e-3e98-8d75-3d2f53b1f016
[2020-06-25T12:47:39.039Z] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [330] [INFO ] Bean 'com.programatori.zuul.AuthClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2020-06-25T12:47:39.039Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [92] [INFO ] Tomcat initialized with port(s): 8080 (https)
[2020-06-25T12:47:39.039Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T12:47:39.039Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting service [Tomcat]
[2020-06-25T12:47:39.039Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.33]
[2020-06-25T12:47:39.039Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2020-06-25T12:47:39.039Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] [284] [INFO ] Root WebApplicationContext: initialization completed in 956 ms
[2020-06-25T12:47:39.039Z] [com.netflix.config.sources.URLConfigurationSource] [main] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-06-25T12:47:39.039Z] [com.netflix.config.sources.URLConfigurationSource] [main] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-06-25T12:47:39.039Z] [com.netflix.config.DynamicPropertyFactory] [main] [281] [INFO ] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7f73ce28
[2020-06-25T12:47:40.040Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [main] [72] [INFO ] Setting initial instance status as: STARTING
[2020-06-25T12:47:40.040Z] [com.netflix.discovery.DiscoveryClient] [main] [368] [INFO ] Initializing Eureka in region us-east-1
[2020-06-25T12:47:40.040Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2020-06-25T12:47:40.040Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2020-06-25T12:47:40.040Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2020-06-25T12:47:40.040Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2020-06-25T12:47:40.040Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [main] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-06-25T12:47:40.040Z] [com.netflix.discovery.DiscoveryClient] [main] [981] [INFO ] Disable delta property : false
[2020-06-25T12:47:40.040Z] [com.netflix.discovery.DiscoveryClient] [main] [982] [INFO ] Single vip registry refresh property : null
[2020-06-25T12:47:40.040Z] [com.netflix.discovery.DiscoveryClient] [main] [983] [INFO ] Force full registry fetch : false
[2020-06-25T12:47:40.040Z] [com.netflix.discovery.DiscoveryClient] [main] [984] [INFO ] Application is null : false
[2020-06-25T12:47:40.040Z] [com.netflix.discovery.DiscoveryClient] [main] [985] [INFO ] Registered Applications size is zero : true
[2020-06-25T12:47:40.040Z] [com.netflix.discovery.DiscoveryClient] [main] [987] [INFO ] Application version is -1: true
[2020-06-25T12:47:40.040Z] [com.netflix.discovery.DiscoveryClient] [main] [1070] [INFO ] Getting all instance registry info from the eureka server
[2020-06-25T12:47:40.040Z] [com.netflix.discovery.DiscoveryClient] [main] [1079] [INFO ] The response status is 200
[2020-06-25T12:47:40.040Z] [com.netflix.discovery.DiscoveryClient] [main] [1294] [INFO ] Starting heartbeat executor: renew interval is: 30
[2020-06-25T12:47:40.040Z] [com.netflix.discovery.InstanceInfoReplicator] [main] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2020-06-25T12:47:40.040Z] [com.netflix.discovery.DiscoveryClient] [main] [468] [INFO ] Discovery Client initialized at timestamp 1593082060559 with initial instances count: 6
[2020-06-25T12:47:40.040Z] [com.netflix.config.sources.URLConfigurationSource] [main] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-06-25T12:47:40.040Z] [com.netflix.config.sources.URLConfigurationSource] [main] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-06-25T12:47:40.040Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [main] [181] [INFO ] Initializing ExecutorService 'applicationTaskExecutor'
[2020-06-25T12:47:40.040Z] [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger] [main] [86] [WARN ] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2020-06-25T12:47:41.041Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [main] [67] [INFO ] Starting filter initializer
[2020-06-25T12:47:41.041Z] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [main] [58] [INFO ] Exposing 2 endpoint(s) beneath base path '/actuator'
[2020-06-25T12:47:41.041Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [main] [41] [INFO ] Registering application ZUUL with eureka with status UP
[2020-06-25T12:47:41.041Z] [com.netflix.discovery.DiscoveryClient$3] [main] [1330] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1593082061079, current=UP, previous=STARTING]
[2020-06-25T12:47:41.041Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [847] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080: registering service...
[2020-06-25T12:47:41.041Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T12:47:41.041Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [856] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - registration status: 204
[2020-06-25T12:47:41.041Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [204] [INFO ] Tomcat started on port(s): 8080 (https) with context path '/api'
[2020-06-25T12:47:41.041Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] [main] [145] [INFO ] Updating port to 8080
[2020-06-25T12:47:41.041Z] [org.springframework.boot.StartupInfoLogger] [main] [61] [INFO ] Started ZuulApplication in 3.188 seconds (JVM running for 3.916)
[2020-06-25T12:47:41.041Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(1)-192.168.1.3] [173] [INFO ] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2020-06-25T12:47:41.041Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(1)-192.168.1.3] [525] [INFO ] Initializing Servlet 'dispatcherServlet'
[2020-06-25T12:47:41.041Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(1)-192.168.1.3] [547] [INFO ] Completed initialization in 7 ms
[2020-06-25T12:47:49.049Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-6] [53] [INFO ] POST request to https://localhost:8080/api/auth/login
[2020-06-25T12:47:50.050Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-6] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T12:47:50.050Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [https-jsse-nio-8080-exec-6] [58] [INFO ] Shutdown hook installed for: NFLoadBalancer-PingTimer-auth
[2020-06-25T12:47:50.050Z] [com.netflix.loadbalancer.BaseLoadBalancer] [https-jsse-nio-8080-exec-6] [197] [INFO ] Client: auth instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2020-06-25T12:47:50.050Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-6] [222] [INFO ] Using serverListUpdater PollingServerListUpdater
[2020-06-25T12:47:50.050Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-6] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T12:47:50.050Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-6] [150] [INFO ] DynamicServerListLoadBalancer for client auth initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[192.168.1.3:8081],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.3:8081;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 01:00:00 CET 1970;	First connection made: Thu Jan 01 01:00:00 CET 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3e4dbe81
[2020-06-25T12:47:50.050Z] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] [https-jsse-nio-8080-exec-6] [84] [WARN ] Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.SimpleHostRoutingFilter.handleException(SimpleHostRoutingFilter.java:261)
	at org.springframework.cloud.netflix.zuul.filters.route.SimpleHostRoutingFilter.run(SimpleHostRoutingFilter.java:241)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:45)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.programatori.zuul.XSSFilter.doFilter(XSSFilter.java:19)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:830)
Caused by: javax.net.ssl.SSLHandshakeException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at java.base/sun.security.ssl.Alert.createSSLException(Alert.java:131)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:324)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:267)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:262)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.checkServerCerts(CertificateMessage.java:1339)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.onConsumeCertificate(CertificateMessage.java:1214)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.consume(CertificateMessage.java:1157)
	at java.base/sun.security.ssl.SSLHandshake.consume(SSLHandshake.java:396)
	at java.base/sun.security.ssl.HandshakeContext.dispatch(HandshakeContext.java:444)
	at java.base/sun.security.ssl.HandshakeContext.dispatch(HandshakeContext.java:422)
	at java.base/sun.security.ssl.TransportContext.dispatch(TransportContext.java:181)
	at java.base/sun.security.ssl.SSLTransport.decode(SSLTransport.java:164)
	at java.base/sun.security.ssl.SSLSocketImpl.decode(SSLSocketImpl.java:1460)
	at java.base/sun.security.ssl.SSLSocketImpl.readHandshakeRecord(SSLSocketImpl.java:1368)
	at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:437)
	at org.apache.http.conn.ssl.SSLConnectionSocketFactory.createLayeredSocket(SSLConnectionSocketFactory.java:436)
	at org.apache.http.conn.ssl.SSLConnectionSocketFactory.connectSocket(SSLConnectionSocketFactory.java:384)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.springframework.cloud.netflix.zuul.filters.route.SimpleHostRoutingFilter.forwardRequest(SimpleHostRoutingFilter.java:422)
	at org.springframework.cloud.netflix.zuul.filters.route.SimpleHostRoutingFilter.forward(SimpleHostRoutingFilter.java:341)
	at org.springframework.cloud.netflix.zuul.filters.route.SimpleHostRoutingFilter.run(SimpleHostRoutingFilter.java:236)
	... 61 common frames omitted
Caused by: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at java.base/sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:438)
	at java.base/sun.security.validator.PKIXValidator.engineValidate(PKIXValidator.java:305)
	at java.base/sun.security.validator.Validator.validate(Validator.java:264)
	at java.base/sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:231)
	at java.base/sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:132)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.checkServerCerts(CertificateMessage.java:1323)
	... 84 common frames omitted
Caused by: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at java.base/sun.security.provider.certpath.SunCertPathBuilder.build(SunCertPathBuilder.java:141)
	at java.base/sun.security.provider.certpath.SunCertPathBuilder.engineBuild(SunCertPathBuilder.java:126)
	at java.base/java.security.cert.CertPathBuilder.build(CertPathBuilder.java:297)
	at java.base/sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:433)
	... 89 common frames omitted
[2020-06-25T12:47:51.051Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [PollingServerListUpdater-0] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T12:48:21.021Z] [com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2] [Thread-9] [53] [INFO ] Shutting down the Executor Pool for PollingServerListUpdater
[2020-06-25T12:48:21.021Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [SpringContextShutdownHook] [65] [INFO ] Unregistering application ZUUL with eureka with status DOWN
[2020-06-25T12:48:21.021Z] [com.netflix.discovery.DiscoveryClient$3] [SpringContextShutdownHook] [1328] [WARN ] Saw local status change event StatusChangeEvent [timestamp=1593082101123, current=DOWN, previous=UP]
[2020-06-25T12:48:21.021Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [847] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080: registering service...
[2020-06-25T12:48:21.021Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [SpringContextShutdownHook] [79] [INFO ] Stopping filter initializer
[2020-06-25T12:48:21.021Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [856] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - registration status: 204
[2020-06-25T12:48:21.021Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [SpringContextShutdownHook] [218] [INFO ] Shutting down ExecutorService 'applicationTaskExecutor'
[2020-06-25T12:48:21.021Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [SpringContextShutdownHook] [67] [INFO ] Shutdown hook removed for: NFLoadBalancer-PingTimer-auth
[2020-06-25T12:48:21.021Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [SpringContextShutdownHook] [72] [INFO ] Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:241)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1068)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1068)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948)
[2020-06-25T12:48:21.021Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [909] [INFO ] Shutting down DiscoveryClient ...
[2020-06-25T12:48:24.024Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [945] [INFO ] Unregistering ...
[2020-06-25T12:48:24.024Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [947] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - deregister  status: 200
[2020-06-25T12:48:24.024Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [934] [INFO ] Completed shut down of DiscoveryClient
[2020-06-25T12:48:35.035Z] [org.springframework.boot.SpringApplication] [main] [651] [INFO ] No active profile set, falling back to default profiles: default
[2020-06-25T12:48:35.035Z] [org.springframework.boot.actuate.endpoint.EndpointId] [main] [155] [WARN ] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[2020-06-25T12:48:35.035Z] [org.springframework.boot.actuate.endpoint.EndpointId] [main] [155] [WARN ] Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
[2020-06-25T12:48:35.035Z] [org.springframework.cloud.context.scope.GenericScope] [main] [295] [INFO ] BeanFactory id=21717a2c-1a0d-34a1-be9a-a88300360682
[2020-06-25T12:48:35.035Z] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [330] [INFO ] Bean 'com.programatori.zuul.AuthClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2020-06-25T12:48:36.036Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [92] [INFO ] Tomcat initialized with port(s): 8080 (https)
[2020-06-25T12:48:36.036Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T12:48:36.036Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting service [Tomcat]
[2020-06-25T12:48:36.036Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.33]
[2020-06-25T12:48:36.036Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2020-06-25T12:48:36.036Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] [284] [INFO ] Root WebApplicationContext: initialization completed in 1188 ms
[2020-06-25T12:48:36.036Z] [com.netflix.config.sources.URLConfigurationSource] [main] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-06-25T12:48:36.036Z] [com.netflix.config.sources.URLConfigurationSource] [main] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-06-25T12:48:36.036Z] [com.netflix.config.DynamicPropertyFactory] [main] [281] [INFO ] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7573b9ee
[2020-06-25T12:48:36.036Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [main] [72] [INFO ] Setting initial instance status as: STARTING
[2020-06-25T12:48:36.036Z] [com.netflix.discovery.DiscoveryClient] [main] [368] [INFO ] Initializing Eureka in region us-east-1
[2020-06-25T12:48:36.036Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2020-06-25T12:48:36.036Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2020-06-25T12:48:37.037Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2020-06-25T12:48:37.037Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2020-06-25T12:48:37.037Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [main] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-06-25T12:48:37.037Z] [com.netflix.discovery.DiscoveryClient] [main] [981] [INFO ] Disable delta property : false
[2020-06-25T12:48:37.037Z] [com.netflix.discovery.DiscoveryClient] [main] [982] [INFO ] Single vip registry refresh property : null
[2020-06-25T12:48:37.037Z] [com.netflix.discovery.DiscoveryClient] [main] [983] [INFO ] Force full registry fetch : false
[2020-06-25T12:48:37.037Z] [com.netflix.discovery.DiscoveryClient] [main] [984] [INFO ] Application is null : false
[2020-06-25T12:48:37.037Z] [com.netflix.discovery.DiscoveryClient] [main] [985] [INFO ] Registered Applications size is zero : true
[2020-06-25T12:48:37.037Z] [com.netflix.discovery.DiscoveryClient] [main] [987] [INFO ] Application version is -1: true
[2020-06-25T12:48:37.037Z] [com.netflix.discovery.DiscoveryClient] [main] [1070] [INFO ] Getting all instance registry info from the eureka server
[2020-06-25T12:48:37.037Z] [com.netflix.discovery.DiscoveryClient] [main] [1079] [INFO ] The response status is 200
[2020-06-25T12:48:37.037Z] [com.netflix.discovery.DiscoveryClient] [main] [1294] [INFO ] Starting heartbeat executor: renew interval is: 30
[2020-06-25T12:48:37.037Z] [com.netflix.discovery.InstanceInfoReplicator] [main] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2020-06-25T12:48:37.037Z] [com.netflix.discovery.DiscoveryClient] [main] [468] [INFO ] Discovery Client initialized at timestamp 1593082117344 with initial instances count: 7
[2020-06-25T12:48:37.037Z] [com.netflix.config.sources.URLConfigurationSource] [main] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-06-25T12:48:37.037Z] [com.netflix.config.sources.URLConfigurationSource] [main] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-06-25T12:48:37.037Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [main] [181] [INFO ] Initializing ExecutorService 'applicationTaskExecutor'
[2020-06-25T12:48:37.037Z] [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger] [main] [86] [WARN ] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2020-06-25T12:48:37.037Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [main] [67] [INFO ] Starting filter initializer
[2020-06-25T12:48:37.037Z] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [main] [58] [INFO ] Exposing 2 endpoint(s) beneath base path '/actuator'
[2020-06-25T12:48:37.037Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [main] [41] [INFO ] Registering application ZUUL with eureka with status UP
[2020-06-25T12:48:37.037Z] [com.netflix.discovery.DiscoveryClient$3] [main] [1330] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1593082117864, current=UP, previous=STARTING]
[2020-06-25T12:48:37.037Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [847] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080: registering service...
[2020-06-25T12:48:37.037Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T12:48:37.037Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [856] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - registration status: 204
[2020-06-25T12:48:37.037Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [204] [INFO ] Tomcat started on port(s): 8080 (https) with context path '/api'
[2020-06-25T12:48:37.037Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] [main] [145] [INFO ] Updating port to 8080
[2020-06-25T12:48:37.037Z] [org.springframework.boot.StartupInfoLogger] [main] [61] [INFO ] Started ZuulApplication in 3.498 seconds (JVM running for 4.053)
[2020-06-25T12:48:38.038Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(2)-192.168.1.3] [173] [INFO ] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2020-06-25T12:48:38.038Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(2)-192.168.1.3] [525] [INFO ] Initializing Servlet 'dispatcherServlet'
[2020-06-25T12:48:38.038Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(2)-192.168.1.3] [547] [INFO ] Completed initialization in 11 ms
[2020-06-25T12:48:45.045Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-6] [53] [INFO ] POST request to https://localhost:8080/api/auth/login
[2020-06-25T12:48:45.045Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-6] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T12:48:45.045Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [https-jsse-nio-8080-exec-6] [58] [INFO ] Shutdown hook installed for: NFLoadBalancer-PingTimer-auth
[2020-06-25T12:48:45.045Z] [com.netflix.loadbalancer.BaseLoadBalancer] [https-jsse-nio-8080-exec-6] [197] [INFO ] Client: auth instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2020-06-25T12:48:45.045Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-6] [222] [INFO ] Using serverListUpdater PollingServerListUpdater
[2020-06-25T12:48:45.045Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-6] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T12:48:45.045Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-6] [150] [INFO ] DynamicServerListLoadBalancer for client auth initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[192.168.1.3:8081],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.3:8081;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 01:00:00 CET 1970;	First connection made: Thu Jan 01 01:00:00 CET 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@a20196e
[2020-06-25T12:48:45.045Z] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] [https-jsse-nio-8080-exec-6] [84] [WARN ] Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.SimpleHostRoutingFilter.handleException(SimpleHostRoutingFilter.java:261)
	at org.springframework.cloud.netflix.zuul.filters.route.SimpleHostRoutingFilter.run(SimpleHostRoutingFilter.java:241)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:45)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.programatori.zuul.XSSFilter.doFilter(XSSFilter.java:19)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:830)
Caused by: javax.net.ssl.SSLPeerUnverifiedException: Certificate for <localhost> doesn't match any of the subject alternative names: []
	at org.apache.http.conn.ssl.SSLConnectionSocketFactory.verifyHostname(SSLConnectionSocketFactory.java:507)
	at org.apache.http.conn.ssl.SSLConnectionSocketFactory.createLayeredSocket(SSLConnectionSocketFactory.java:437)
	at org.apache.http.conn.ssl.SSLConnectionSocketFactory.connectSocket(SSLConnectionSocketFactory.java:384)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.springframework.cloud.netflix.zuul.filters.route.SimpleHostRoutingFilter.forwardRequest(SimpleHostRoutingFilter.java:422)
	at org.springframework.cloud.netflix.zuul.filters.route.SimpleHostRoutingFilter.forward(SimpleHostRoutingFilter.java:341)
	at org.springframework.cloud.netflix.zuul.filters.route.SimpleHostRoutingFilter.run(SimpleHostRoutingFilter.java:236)
	... 61 common frames omitted
[2020-06-25T12:48:46.046Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [PollingServerListUpdater-0] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T12:53:37.037Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-06-25T12:54:03.003Z] [com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2] [Thread-9] [53] [INFO ] Shutting down the Executor Pool for PollingServerListUpdater
[2020-06-25T12:54:03.003Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [SpringContextShutdownHook] [65] [INFO ] Unregistering application ZUUL with eureka with status DOWN
[2020-06-25T12:54:03.003Z] [com.netflix.discovery.DiscoveryClient$3] [SpringContextShutdownHook] [1328] [WARN ] Saw local status change event StatusChangeEvent [timestamp=1593082443703, current=DOWN, previous=UP]
[2020-06-25T12:54:03.003Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [847] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080: registering service...
[2020-06-25T12:54:03.003Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [SpringContextShutdownHook] [79] [INFO ] Stopping filter initializer
[2020-06-25T12:54:03.003Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [856] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - registration status: 204
[2020-06-25T12:54:03.003Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [SpringContextShutdownHook] [218] [INFO ] Shutting down ExecutorService 'applicationTaskExecutor'
[2020-06-25T12:54:03.003Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [SpringContextShutdownHook] [67] [INFO ] Shutdown hook removed for: NFLoadBalancer-PingTimer-auth
[2020-06-25T12:54:03.003Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [SpringContextShutdownHook] [72] [INFO ] Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:241)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1068)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1068)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948)
[2020-06-25T12:54:03.003Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [909] [INFO ] Shutting down DiscoveryClient ...
[2020-06-25T12:54:06.006Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [945] [INFO ] Unregistering ...
[2020-06-25T12:54:06.006Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [947] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - deregister  status: 200
[2020-06-25T12:54:06.006Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [934] [INFO ] Completed shut down of DiscoveryClient
[2020-06-25T12:54:10.010Z] [org.springframework.boot.SpringApplication] [main] [651] [INFO ] No active profile set, falling back to default profiles: default
[2020-06-25T12:54:11.011Z] [org.springframework.boot.actuate.endpoint.EndpointId] [main] [155] [WARN ] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[2020-06-25T12:54:11.011Z] [org.springframework.boot.actuate.endpoint.EndpointId] [main] [155] [WARN ] Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
[2020-06-25T12:54:11.011Z] [org.springframework.cloud.context.scope.GenericScope] [main] [295] [INFO ] BeanFactory id=21717a2c-1a0d-34a1-be9a-a88300360682
[2020-06-25T12:54:11.011Z] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [330] [INFO ] Bean 'com.programatori.zuul.AuthClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2020-06-25T12:54:11.011Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [92] [INFO ] Tomcat initialized with port(s): 8080 (https)
[2020-06-25T12:54:11.011Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T12:54:11.011Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting service [Tomcat]
[2020-06-25T12:54:11.011Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.33]
[2020-06-25T12:54:11.011Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2020-06-25T12:54:11.011Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] [284] [INFO ] Root WebApplicationContext: initialization completed in 1013 ms
[2020-06-25T12:54:12.012Z] [com.netflix.config.sources.URLConfigurationSource] [main] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-06-25T12:54:12.012Z] [com.netflix.config.sources.URLConfigurationSource] [main] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-06-25T12:54:12.012Z] [com.netflix.config.DynamicPropertyFactory] [main] [281] [INFO ] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@315c081
[2020-06-25T12:54:12.012Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [main] [72] [INFO ] Setting initial instance status as: STARTING
[2020-06-25T12:54:12.012Z] [com.netflix.discovery.DiscoveryClient] [main] [368] [INFO ] Initializing Eureka in region us-east-1
[2020-06-25T12:54:12.012Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2020-06-25T12:54:12.012Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2020-06-25T12:54:12.012Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2020-06-25T12:54:12.012Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2020-06-25T12:54:12.012Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [main] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-06-25T12:54:12.012Z] [com.netflix.discovery.DiscoveryClient] [main] [981] [INFO ] Disable delta property : false
[2020-06-25T12:54:12.012Z] [com.netflix.discovery.DiscoveryClient] [main] [982] [INFO ] Single vip registry refresh property : null
[2020-06-25T12:54:12.012Z] [com.netflix.discovery.DiscoveryClient] [main] [983] [INFO ] Force full registry fetch : false
[2020-06-25T12:54:12.012Z] [com.netflix.discovery.DiscoveryClient] [main] [984] [INFO ] Application is null : false
[2020-06-25T12:54:12.012Z] [com.netflix.discovery.DiscoveryClient] [main] [985] [INFO ] Registered Applications size is zero : true
[2020-06-25T12:54:12.012Z] [com.netflix.discovery.DiscoveryClient] [main] [987] [INFO ] Application version is -1: true
[2020-06-25T12:54:12.012Z] [com.netflix.discovery.DiscoveryClient] [main] [1070] [INFO ] Getting all instance registry info from the eureka server
[2020-06-25T12:54:13.013Z] [com.netflix.discovery.DiscoveryClient] [main] [1079] [INFO ] The response status is 200
[2020-06-25T12:54:13.013Z] [com.netflix.discovery.DiscoveryClient] [main] [1294] [INFO ] Starting heartbeat executor: renew interval is: 30
[2020-06-25T12:54:13.013Z] [com.netflix.discovery.InstanceInfoReplicator] [main] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2020-06-25T12:54:13.013Z] [com.netflix.discovery.DiscoveryClient] [main] [468] [INFO ] Discovery Client initialized at timestamp 1593082453057 with initial instances count: 5
[2020-06-25T12:54:13.013Z] [com.netflix.config.sources.URLConfigurationSource] [main] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-06-25T12:54:13.013Z] [com.netflix.config.sources.URLConfigurationSource] [main] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-06-25T12:54:13.013Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [main] [181] [INFO ] Initializing ExecutorService 'applicationTaskExecutor'
[2020-06-25T12:54:13.013Z] [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger] [main] [86] [WARN ] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2020-06-25T12:54:13.013Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [main] [67] [INFO ] Starting filter initializer
[2020-06-25T12:54:13.013Z] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [main] [58] [INFO ] Exposing 2 endpoint(s) beneath base path '/actuator'
[2020-06-25T12:54:13.013Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [main] [41] [INFO ] Registering application ZUUL with eureka with status UP
[2020-06-25T12:54:13.013Z] [com.netflix.discovery.DiscoveryClient$3] [main] [1330] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1593082453556, current=UP, previous=STARTING]
[2020-06-25T12:54:13.013Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [847] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080: registering service...
[2020-06-25T12:54:13.013Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T12:54:13.013Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [856] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - registration status: 204
[2020-06-25T12:54:13.013Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Pausing ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T12:54:13.013Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Stopping service [Tomcat]
[2020-06-25T12:54:13.013Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [WARN ] The web application [api] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@13.0.2/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@13.0.2/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194)
 java.base@13.0.2/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2081)
 java.base@13.0.2/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:433)
 java.base@13.0.2/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@13.0.2/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@13.0.2/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@13.0.2/java.lang.Thread.run(Thread.java:830)
[2020-06-25T12:54:13.013Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [WARN ] The web application [api] appears to have started a thread named [RxIoScheduler-1 (Evictor)] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@13.0.2/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@13.0.2/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:235)
 java.base@13.0.2/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@13.0.2/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@13.0.2/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@13.0.2/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@13.0.2/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@13.0.2/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@13.0.2/java.lang.Thread.run(Thread.java:830)
[2020-06-25T12:54:13.013Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Stopping ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T12:54:13.013Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Destroying ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T12:54:13.013Z] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener] [main] [136] [INFO ] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[2020-06-25T12:54:13.013Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [main] [65] [INFO ] Unregistering application ZUUL with eureka with status DOWN
[2020-06-25T12:54:13.013Z] [com.netflix.discovery.DiscoveryClient$3] [main] [1328] [WARN ] Saw local status change event StatusChangeEvent [timestamp=1593082453616, current=DOWN, previous=UP]
[2020-06-25T12:54:13.013Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [847] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080: registering service...
[2020-06-25T12:54:13.013Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [main] [79] [INFO ] Stopping filter initializer
[2020-06-25T12:54:13.013Z] [org.springframework.beans.factory.support.DisposableBeanAdapter] [main] [267] [WARN ] Invocation of destroy method failed on bean with name 'tomcatMetricsBinder': java.lang.NullPointerException
[2020-06-25T12:54:13.013Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [main] [218] [INFO ] Shutting down ExecutorService 'applicationTaskExecutor'
[2020-06-25T12:54:13.013Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [856] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - registration status: 204
[2020-06-25T12:54:13.013Z] [com.netflix.discovery.DiscoveryClient] [main] [909] [INFO ] Shutting down DiscoveryClient ...
[2020-06-25T12:54:16.016Z] [com.netflix.discovery.DiscoveryClient] [main] [945] [INFO ] Unregistering ...
[2020-06-25T12:54:16.016Z] [com.netflix.discovery.DiscoveryClient] [main] [947] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - deregister  status: 200
[2020-06-25T12:54:16.016Z] [com.netflix.discovery.DiscoveryClient] [main] [934] [INFO ] Completed shut down of DiscoveryClient
[2020-06-25T12:54:16.016Z] [org.springframework.boot.SpringApplication] [main] [826] [ERROR] Application run failed
org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat server
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:215)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:297)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:163)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.programatori.zuul.ZuulApplication.main(ZuulApplication.java:37)
Caused by: java.lang.IllegalArgumentException: standardService.connector.startFailed
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:231)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:278)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:197)
	... 10 common frames omitted
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1038)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:227)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: jsse.alias_no_key_entry
	at org.apache.tomcat.util.net.AbstractJsseEndpoint.createSSLContext(AbstractJsseEndpoint.java:99)
	at org.apache.tomcat.util.net.AbstractJsseEndpoint.initialiseSsl(AbstractJsseEndpoint.java:71)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:217)
	at org.apache.tomcat.util.net.AbstractEndpoint.bindWithCleanup(AbstractEndpoint.java:1141)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1227)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:592)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1035)
	... 14 common frames omitted
Caused by: java.io.IOException: jsse.alias_no_key_entry
	at org.apache.tomcat.util.net.SSLUtilBase.getKeyManagers(SSLUtilBase.java:328)
	at org.apache.tomcat.util.net.SSLUtilBase.createSSLContext(SSLUtilBase.java:247)
	at org.apache.tomcat.util.net.AbstractJsseEndpoint.createSSLContext(AbstractJsseEndpoint.java:97)
	... 20 common frames omitted
[2020-06-25T12:55:27.027Z] [org.springframework.boot.SpringApplication] [main] [651] [INFO ] No active profile set, falling back to default profiles: default
[2020-06-25T12:55:27.027Z] [org.springframework.boot.actuate.endpoint.EndpointId] [main] [155] [WARN ] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[2020-06-25T12:55:27.027Z] [org.springframework.boot.actuate.endpoint.EndpointId] [main] [155] [WARN ] Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
[2020-06-25T12:55:27.027Z] [org.springframework.cloud.context.scope.GenericScope] [main] [295] [INFO ] BeanFactory id=21717a2c-1a0d-34a1-be9a-a88300360682
[2020-06-25T12:55:27.027Z] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [330] [INFO ] Bean 'com.programatori.zuul.AuthClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2020-06-25T12:55:28.028Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [92] [INFO ] Tomcat initialized with port(s): 8080 (https)
[2020-06-25T12:55:28.028Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T12:55:28.028Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting service [Tomcat]
[2020-06-25T12:55:28.028Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.33]
[2020-06-25T12:55:28.028Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2020-06-25T12:55:28.028Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] [284] [INFO ] Root WebApplicationContext: initialization completed in 1051 ms
[2020-06-25T12:55:28.028Z] [com.netflix.config.sources.URLConfigurationSource] [main] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-06-25T12:55:28.028Z] [com.netflix.config.sources.URLConfigurationSource] [main] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-06-25T12:55:28.028Z] [com.netflix.config.DynamicPropertyFactory] [main] [281] [INFO ] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@35bfa1bb
[2020-06-25T12:55:28.028Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [main] [72] [INFO ] Setting initial instance status as: STARTING
[2020-06-25T12:55:28.028Z] [com.netflix.discovery.DiscoveryClient] [main] [368] [INFO ] Initializing Eureka in region us-east-1
[2020-06-25T12:55:28.028Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2020-06-25T12:55:28.028Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2020-06-25T12:55:28.028Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2020-06-25T12:55:28.028Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2020-06-25T12:55:28.028Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [main] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-06-25T12:55:28.028Z] [com.netflix.discovery.DiscoveryClient] [main] [981] [INFO ] Disable delta property : false
[2020-06-25T12:55:28.028Z] [com.netflix.discovery.DiscoveryClient] [main] [982] [INFO ] Single vip registry refresh property : null
[2020-06-25T12:55:28.028Z] [com.netflix.discovery.DiscoveryClient] [main] [983] [INFO ] Force full registry fetch : false
[2020-06-25T12:55:28.028Z] [com.netflix.discovery.DiscoveryClient] [main] [984] [INFO ] Application is null : false
[2020-06-25T12:55:28.028Z] [com.netflix.discovery.DiscoveryClient] [main] [985] [INFO ] Registered Applications size is zero : true
[2020-06-25T12:55:28.028Z] [com.netflix.discovery.DiscoveryClient] [main] [987] [INFO ] Application version is -1: true
[2020-06-25T12:55:28.028Z] [com.netflix.discovery.DiscoveryClient] [main] [1070] [INFO ] Getting all instance registry info from the eureka server
[2020-06-25T12:55:29.029Z] [com.netflix.discovery.DiscoveryClient] [main] [1079] [INFO ] The response status is 200
[2020-06-25T12:55:29.029Z] [com.netflix.discovery.DiscoveryClient] [main] [1294] [INFO ] Starting heartbeat executor: renew interval is: 30
[2020-06-25T12:55:29.029Z] [com.netflix.discovery.InstanceInfoReplicator] [main] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2020-06-25T12:55:29.029Z] [com.netflix.discovery.DiscoveryClient] [main] [468] [INFO ] Discovery Client initialized at timestamp 1593082529126 with initial instances count: 5
[2020-06-25T12:55:29.029Z] [com.netflix.config.sources.URLConfigurationSource] [main] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-06-25T12:55:29.029Z] [com.netflix.config.sources.URLConfigurationSource] [main] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-06-25T12:55:29.029Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [main] [181] [INFO ] Initializing ExecutorService 'applicationTaskExecutor'
[2020-06-25T12:55:29.029Z] [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger] [main] [86] [WARN ] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2020-06-25T12:55:29.029Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [main] [67] [INFO ] Starting filter initializer
[2020-06-25T12:55:29.029Z] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [main] [58] [INFO ] Exposing 2 endpoint(s) beneath base path '/actuator'
[2020-06-25T12:55:29.029Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [main] [41] [INFO ] Registering application ZUUL with eureka with status UP
[2020-06-25T12:55:29.029Z] [com.netflix.discovery.DiscoveryClient$3] [main] [1330] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1593082529607, current=UP, previous=STARTING]
[2020-06-25T12:55:29.029Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [847] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080: registering service...
[2020-06-25T12:55:29.029Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T12:55:29.029Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [856] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - registration status: 204
[2020-06-25T12:55:29.029Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [204] [INFO ] Tomcat started on port(s): 8080 (https) with context path '/api'
[2020-06-25T12:55:29.029Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] [main] [145] [INFO ] Updating port to 8080
[2020-06-25T12:55:29.029Z] [org.springframework.boot.StartupInfoLogger] [main] [61] [INFO ] Started ZuulApplication in 2.993 seconds (JVM running for 3.524)
[2020-06-25T12:55:29.029Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(1)-192.168.1.3] [173] [INFO ] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2020-06-25T12:55:29.029Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(1)-192.168.1.3] [525] [INFO ] Initializing Servlet 'dispatcherServlet'
[2020-06-25T12:55:29.029Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(1)-192.168.1.3] [547] [INFO ] Completed initialization in 7 ms
[2020-06-25T12:56:55.055Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-6] [53] [INFO ] POST request to https://localhost:8080/api/auth/login
[2020-06-25T12:56:55.055Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-6] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T12:56:55.055Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [https-jsse-nio-8080-exec-6] [58] [INFO ] Shutdown hook installed for: NFLoadBalancer-PingTimer-auth
[2020-06-25T12:56:55.055Z] [com.netflix.loadbalancer.BaseLoadBalancer] [https-jsse-nio-8080-exec-6] [197] [INFO ] Client: auth instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2020-06-25T12:56:55.055Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-6] [222] [INFO ] Using serverListUpdater PollingServerListUpdater
[2020-06-25T12:56:55.055Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-6] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T12:56:55.055Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-6] [150] [INFO ] DynamicServerListLoadBalancer for client auth initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[192.168.1.3:8081],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.3:8081;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 01:00:00 CET 1970;	First connection made: Thu Jan 01 01:00:00 CET 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6133ce28
[2020-06-25T12:56:56.056Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [PollingServerListUpdater-0] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T12:57:15.015Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-7] [53] [INFO ] POST request to https://localhost:8080/api/auth/login
[2020-06-25T12:57:21.021Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-1] [53] [INFO ] GET request to https://127.0.0.1:8080/api/search/get
[2020-06-25T12:57:21.021Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-1] [115] [INFO ] Flipping property: search.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T12:57:21.021Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [https-jsse-nio-8080-exec-1] [58] [INFO ] Shutdown hook installed for: NFLoadBalancer-PingTimer-search
[2020-06-25T12:57:21.021Z] [com.netflix.loadbalancer.BaseLoadBalancer] [https-jsse-nio-8080-exec-1] [197] [INFO ] Client: search instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=search,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2020-06-25T12:57:21.021Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-1] [222] [INFO ] Using serverListUpdater PollingServerListUpdater
[2020-06-25T12:57:21.021Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-1] [115] [INFO ] Flipping property: search.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T12:57:21.021Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-1] [150] [INFO ] DynamicServerListLoadBalancer for client search initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=search,current list of Servers=[192.168.1.3:8083],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.3:8083;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 01:00:00 CET 1970;	First connection made: Thu Jan 01 01:00:00 CET 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@57a79875
[2020-06-25T12:57:21.021Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-1] [132] [WARN ] The Hystrix timeout of 60000ms for the command search is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:22.022Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-8] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/1
[2020-06-25T12:57:22.022Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-4] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/3/1
[2020-06-25T12:57:22.022Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-3] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/3
[2020-06-25T12:57:22.022Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-6] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/2
[2020-06-25T12:57:22.022Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-2] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/2/1
[2020-06-25T12:57:22.022Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-10] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/1/1
[2020-06-25T12:57:22.022Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-8] [115] [INFO ] Flipping property: recension.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T12:57:22.022Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [https-jsse-nio-8080-exec-8] [58] [INFO ] Shutdown hook installed for: NFLoadBalancer-PingTimer-recension
[2020-06-25T12:57:22.022Z] [com.netflix.loadbalancer.BaseLoadBalancer] [https-jsse-nio-8080-exec-8] [197] [INFO ] Client: recension instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=recension,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2020-06-25T12:57:22.022Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-8] [222] [INFO ] Using serverListUpdater PollingServerListUpdater
[2020-06-25T12:57:22.022Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-8] [115] [INFO ] Flipping property: recension.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T12:57:22.022Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-8] [150] [INFO ] DynamicServerListLoadBalancer for client recension initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=recension,current list of Servers=[192.168.1.3:8085],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.3:8085;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 01:00:00 CET 1970;	First connection made: Thu Jan 01 01:00:00 CET 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2c958375
[2020-06-25T12:57:22.022Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-3] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:22.022Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-6] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:22.022Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-4] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:22.022Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-10] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:22.022Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-2] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:22.022Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-8] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:22.022Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-4] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/4/1
[2020-06-25T12:57:22.022Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-5] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/4
[2020-06-25T12:57:22.022Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-4] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:22.022Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-5] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:22.022Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-2] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/5/1
[2020-06-25T12:57:22.022Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-6] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/6
[2020-06-25T12:57:22.022Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-7] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/5
[2020-06-25T12:57:22.022Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-2] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:22.022Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-6] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:22.022Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-10] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/6/1
[2020-06-25T12:57:22.022Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-7] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:22.022Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-10] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:22.022Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-7] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/7
[2020-06-25T12:57:22.022Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-7] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:22.022Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [PollingServerListUpdater-0] [115] [INFO ] Flipping property: search.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T12:57:22.022Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-6] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/7/1
[2020-06-25T12:57:22.022Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-6] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:22.022Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-4] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/8/1
[2020-06-25T12:57:23.023Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-4] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:23.023Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-9] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/8
[2020-06-25T12:57:23.023Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-9] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:23.023Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-5] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/9
[2020-06-25T12:57:23.023Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-10] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/9/1
[2020-06-25T12:57:23.023Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-5] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:23.023Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-10] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:23.023Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-7] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/10
[2020-06-25T12:57:23.023Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-7] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:23.023Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-10] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/10/1
[2020-06-25T12:57:23.023Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-10] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:23.023Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [PollingServerListUpdater-1] [115] [INFO ] Flipping property: recension.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T12:57:30.030Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-3] [53] [INFO ] POST request to https://127.0.0.1:8080/api/auth/login
[2020-06-25T12:57:30.030Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-3] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/1
[2020-06-25T12:57:30.030Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-3] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:30.030Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-4] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/2/1
[2020-06-25T12:57:30.030Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-2] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/1/1
[2020-06-25T12:57:30.030Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-8] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/3
[2020-06-25T12:57:30.030Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-5] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/2
[2020-06-25T12:57:30.030Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-7] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/3/1
[2020-06-25T12:57:30.030Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-4] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:30.030Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-2] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:30.030Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-5] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:30.030Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-8] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:30.030Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-7] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:31.031Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-7] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/4/1
[2020-06-25T12:57:31.031Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-7] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:31.031Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-9] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/4
[2020-06-25T12:57:31.031Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-5] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/5
[2020-06-25T12:57:31.031Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-1] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/5/1
[2020-06-25T12:57:31.031Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-9] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:31.031Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-5] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:31.031Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-1] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:31.031Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-8] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/6
[2020-06-25T12:57:31.031Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-9] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/6/1
[2020-06-25T12:57:31.031Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-8] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:31.031Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-9] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:31.031Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-10] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/7/1
[2020-06-25T12:57:31.031Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-4] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/7
[2020-06-25T12:57:31.031Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-3] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/8/1
[2020-06-25T12:57:31.031Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-2] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/9
[2020-06-25T12:57:31.031Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-10] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:31.031Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-4] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:31.031Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-3] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:31.031Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-2] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:31.031Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-7] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/8
[2020-06-25T12:57:31.031Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-7] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:31.031Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-1] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/9/1
[2020-06-25T12:57:31.031Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-1] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:31.031Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-8] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/10
[2020-06-25T12:57:31.031Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-1] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/10/1
[2020-06-25T12:57:31.031Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-8] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:31.031Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-1] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T12:57:31.031Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-3] [53] [INFO ] GET request to https://127.0.0.1:8080/api/search/get
[2020-06-25T12:57:31.031Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-3] [132] [WARN ] The Hystrix timeout of 60000ms for the command search is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T13:00:28.028Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-06-25T13:00:40.040Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-10] [53] [INFO ] GET request to https://127.0.0.1:8080/api/search/get
[2020-06-25T13:00:40.040Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-10] [132] [WARN ] The Hystrix timeout of 60000ms for the command search is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T13:00:40.040Z] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] [https-jsse-nio-8080-exec-10] [84] [WARN ] Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:198)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:173)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:119)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:45)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.programatori.zuul.XSSFilter.doFilter(XSSFilter.java:19)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:830)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: search
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:221)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:55)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:167)
	... 62 common frames omitted
[2020-06-25T13:00:57.057Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-2] [53] [INFO ] GET request to https://127.0.0.1:8080/api/search/get
[2020-06-25T13:00:57.057Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-2] [132] [WARN ] The Hystrix timeout of 60000ms for the command search is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T13:00:57.057Z] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] [https-jsse-nio-8080-exec-2] [84] [WARN ] Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:198)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:173)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:119)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:45)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.programatori.zuul.XSSFilter.doFilter(XSSFilter.java:19)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:830)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: search
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:221)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:55)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:167)
	... 62 common frames omitted
[2020-06-25T13:01:01.001Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-10] [53] [INFO ] GET request to https://127.0.0.1:8080/api/search/hello
[2020-06-25T13:01:01.001Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-10] [132] [WARN ] The Hystrix timeout of 60000ms for the command search is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T13:01:01.001Z] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] [https-jsse-nio-8080-exec-10] [84] [WARN ] Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:198)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:173)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:119)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:45)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.programatori.zuul.XSSFilter.doFilter(XSSFilter.java:19)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:830)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: search
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:221)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:55)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:167)
	... 62 common frames omitted
[2020-06-25T13:01:02.002Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-2] [53] [INFO ] GET request to https://127.0.0.1:8080/api/search/hello
[2020-06-25T13:01:02.002Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-2] [132] [WARN ] The Hystrix timeout of 60000ms for the command search is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T13:01:02.002Z] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] [https-jsse-nio-8080-exec-2] [84] [WARN ] Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:198)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:173)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:119)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:45)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.programatori.zuul.XSSFilter.doFilter(XSSFilter.java:19)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:830)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: search
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:221)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:55)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:167)
	... 62 common frames omitted
[2020-06-25T13:01:28.028Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-9] [53] [INFO ] GET request to https://localhost:8080/api/search/hello
[2020-06-25T13:01:28.028Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-9] [132] [WARN ] The Hystrix timeout of 60000ms for the command search is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T13:01:28.028Z] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] [https-jsse-nio-8080-exec-9] [84] [WARN ] Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:198)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:173)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:119)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:45)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.programatori.zuul.XSSFilter.doFilter(XSSFilter.java:19)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:830)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: search
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:221)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:55)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:167)
	... 62 common frames omitted
[2020-06-25T13:02:40.040Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-7] [53] [INFO ] GET request to https://localhost:8080/api/search/hello
[2020-06-25T13:02:40.040Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-7] [132] [WARN ] The Hystrix timeout of 60000ms for the command search is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T13:02:40.040Z] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] [https-jsse-nio-8080-exec-7] [84] [WARN ] Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:198)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:173)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:119)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:45)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.programatori.zuul.XSSFilter.doFilter(XSSFilter.java:19)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:830)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: search
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:221)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:55)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:167)
	... 62 common frames omitted
[2020-06-25T13:03:11.011Z] [com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2] [Thread-9] [53] [INFO ] Shutting down the Executor Pool for PollingServerListUpdater
[2020-06-25T13:03:11.011Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [SpringContextShutdownHook] [65] [INFO ] Unregistering application ZUUL with eureka with status DOWN
[2020-06-25T13:03:11.011Z] [com.netflix.discovery.DiscoveryClient$3] [SpringContextShutdownHook] [1328] [WARN ] Saw local status change event StatusChangeEvent [timestamp=1593082991997, current=DOWN, previous=UP]
[2020-06-25T13:03:11.011Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [847] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080: registering service...
[2020-06-25T13:03:11.011Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [SpringContextShutdownHook] [79] [INFO ] Stopping filter initializer
[2020-06-25T13:03:12.012Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [856] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - registration status: 204
[2020-06-25T13:03:12.012Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [SpringContextShutdownHook] [218] [INFO ] Shutting down ExecutorService 'applicationTaskExecutor'
[2020-06-25T13:03:12.012Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [SpringContextShutdownHook] [67] [INFO ] Shutdown hook removed for: NFLoadBalancer-PingTimer-search
[2020-06-25T13:03:12.012Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [SpringContextShutdownHook] [72] [INFO ] Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:241)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1068)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1068)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948)
[2020-06-25T13:03:12.012Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [SpringContextShutdownHook] [67] [INFO ] Shutdown hook removed for: NFLoadBalancer-PingTimer-auth
[2020-06-25T13:03:12.012Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [SpringContextShutdownHook] [72] [INFO ] Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:241)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1068)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1068)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948)
[2020-06-25T13:03:12.012Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [SpringContextShutdownHook] [67] [INFO ] Shutdown hook removed for: NFLoadBalancer-PingTimer-recension
[2020-06-25T13:03:12.012Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [SpringContextShutdownHook] [72] [INFO ] Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:241)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1068)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1068)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948)
[2020-06-25T13:03:12.012Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [909] [INFO ] Shutting down DiscoveryClient ...
[2020-06-25T13:03:15.015Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [945] [INFO ] Unregistering ...
[2020-06-25T13:03:15.015Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [947] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - deregister  status: 200
[2020-06-25T13:03:15.015Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [934] [INFO ] Completed shut down of DiscoveryClient
[2020-06-25T13:03:19.019Z] [org.springframework.boot.SpringApplication] [main] [651] [INFO ] No active profile set, falling back to default profiles: default
[2020-06-25T13:03:19.019Z] [org.springframework.boot.actuate.endpoint.EndpointId] [main] [155] [WARN ] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[2020-06-25T13:03:19.019Z] [org.springframework.boot.actuate.endpoint.EndpointId] [main] [155] [WARN ] Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
[2020-06-25T13:03:19.019Z] [org.springframework.cloud.context.scope.GenericScope] [main] [295] [INFO ] BeanFactory id=21717a2c-1a0d-34a1-be9a-a88300360682
[2020-06-25T13:03:19.019Z] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [330] [INFO ] Bean 'com.programatori.zuul.AuthClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2020-06-25T13:03:20.020Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [92] [INFO ] Tomcat initialized with port(s): 8080 (https)
[2020-06-25T13:03:20.020Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T13:03:20.020Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting service [Tomcat]
[2020-06-25T13:03:20.020Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.33]
[2020-06-25T13:03:20.020Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2020-06-25T13:03:20.020Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] [284] [INFO ] Root WebApplicationContext: initialization completed in 1124 ms
[2020-06-25T13:03:20.020Z] [com.netflix.config.sources.URLConfigurationSource] [main] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-06-25T13:03:20.020Z] [com.netflix.config.sources.URLConfigurationSource] [main] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-06-25T13:03:20.020Z] [com.netflix.config.DynamicPropertyFactory] [main] [281] [INFO ] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2eda4eeb
[2020-06-25T13:03:20.020Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [main] [72] [INFO ] Setting initial instance status as: STARTING
[2020-06-25T13:03:20.020Z] [com.netflix.discovery.DiscoveryClient] [main] [368] [INFO ] Initializing Eureka in region us-east-1
[2020-06-25T13:03:20.020Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2020-06-25T13:03:20.020Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2020-06-25T13:03:21.021Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2020-06-25T13:03:21.021Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2020-06-25T13:03:21.021Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [main] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-06-25T13:03:21.021Z] [com.netflix.discovery.DiscoveryClient] [main] [981] [INFO ] Disable delta property : false
[2020-06-25T13:03:21.021Z] [com.netflix.discovery.DiscoveryClient] [main] [982] [INFO ] Single vip registry refresh property : null
[2020-06-25T13:03:21.021Z] [com.netflix.discovery.DiscoveryClient] [main] [983] [INFO ] Force full registry fetch : false
[2020-06-25T13:03:21.021Z] [com.netflix.discovery.DiscoveryClient] [main] [984] [INFO ] Application is null : false
[2020-06-25T13:03:21.021Z] [com.netflix.discovery.DiscoveryClient] [main] [985] [INFO ] Registered Applications size is zero : true
[2020-06-25T13:03:21.021Z] [com.netflix.discovery.DiscoveryClient] [main] [987] [INFO ] Application version is -1: true
[2020-06-25T13:03:21.021Z] [com.netflix.discovery.DiscoveryClient] [main] [1070] [INFO ] Getting all instance registry info from the eureka server
[2020-06-25T13:03:21.021Z] [com.netflix.discovery.DiscoveryClient] [main] [1079] [INFO ] The response status is 200
[2020-06-25T13:03:21.021Z] [com.netflix.discovery.DiscoveryClient] [main] [1294] [INFO ] Starting heartbeat executor: renew interval is: 30
[2020-06-25T13:03:21.021Z] [com.netflix.discovery.InstanceInfoReplicator] [main] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2020-06-25T13:03:21.021Z] [com.netflix.discovery.DiscoveryClient] [main] [468] [INFO ] Discovery Client initialized at timestamp 1593083001342 with initial instances count: 6
[2020-06-25T13:03:21.021Z] [com.netflix.config.sources.URLConfigurationSource] [main] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-06-25T13:03:21.021Z] [com.netflix.config.sources.URLConfigurationSource] [main] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-06-25T13:03:21.021Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [main] [181] [INFO ] Initializing ExecutorService 'applicationTaskExecutor'
[2020-06-25T13:03:21.021Z] [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger] [main] [86] [WARN ] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2020-06-25T13:03:21.021Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [main] [67] [INFO ] Starting filter initializer
[2020-06-25T13:03:21.021Z] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [main] [58] [INFO ] Exposing 2 endpoint(s) beneath base path '/actuator'
[2020-06-25T13:03:21.021Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [main] [41] [INFO ] Registering application ZUUL with eureka with status UP
[2020-06-25T13:03:21.021Z] [com.netflix.discovery.DiscoveryClient$3] [main] [1330] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1593083001835, current=UP, previous=STARTING]
[2020-06-25T13:03:21.021Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [847] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080: registering service...
[2020-06-25T13:03:21.021Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T13:03:21.021Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [856] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - registration status: 204
[2020-06-25T13:03:21.021Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [204] [INFO ] Tomcat started on port(s): 8080 (https) with context path '/api'
[2020-06-25T13:03:21.021Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] [main] [145] [INFO ] Updating port to 8080
[2020-06-25T13:03:21.021Z] [org.springframework.boot.StartupInfoLogger] [main] [61] [INFO ] Started ZuulApplication in 3.168 seconds (JVM running for 3.692)
[2020-06-25T13:03:22.022Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(2)-192.168.1.3] [173] [INFO ] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2020-06-25T13:03:22.022Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(2)-192.168.1.3] [525] [INFO ] Initializing Servlet 'dispatcherServlet'
[2020-06-25T13:03:22.022Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(2)-192.168.1.3] [547] [INFO ] Completed initialization in 9 ms
[2020-06-25T13:03:28.028Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-6] [53] [INFO ] GET request to https://localhost:8080/api/search/hello
[2020-06-25T13:03:28.028Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-6] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T13:03:28.028Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [https-jsse-nio-8080-exec-6] [58] [INFO ] Shutdown hook installed for: NFLoadBalancer-PingTimer-auth
[2020-06-25T13:03:28.028Z] [com.netflix.loadbalancer.BaseLoadBalancer] [https-jsse-nio-8080-exec-6] [197] [INFO ] Client: auth instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2020-06-25T13:03:28.028Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-6] [222] [INFO ] Using serverListUpdater PollingServerListUpdater
[2020-06-25T13:03:28.028Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-6] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T13:03:28.028Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-6] [150] [INFO ] DynamicServerListLoadBalancer for client auth initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[192.168.1.3:8081],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.3:8081;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 01:00:00 CET 1970;	First connection made: Thu Jan 01 01:00:00 CET 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@34df7170
[2020-06-25T13:03:29.029Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [PollingServerListUpdater-0] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T13:03:34.034Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-7] [53] [INFO ] GET request to https://localhost:8080/api/search/get
[2020-06-25T13:03:46.046Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-2] [53] [INFO ] GET request to https://127.0.0.1:8080/api/search/get
[2020-06-25T13:03:46.046Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-2] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/1
[2020-06-25T13:03:46.046Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-8] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/1/1
[2020-06-25T13:03:46.046Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-1] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/2
[2020-06-25T13:03:46.046Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-4] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/2/1
[2020-06-25T13:03:46.046Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-6] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/3
[2020-06-25T13:03:46.046Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-7] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/3/1
[2020-06-25T13:03:46.046Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-2] [115] [INFO ] Flipping property: recension.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T13:03:46.046Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [https-jsse-nio-8080-exec-2] [58] [INFO ] Shutdown hook installed for: NFLoadBalancer-PingTimer-recension
[2020-06-25T13:03:46.046Z] [com.netflix.loadbalancer.BaseLoadBalancer] [https-jsse-nio-8080-exec-2] [197] [INFO ] Client: recension instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=recension,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2020-06-25T13:03:46.046Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-2] [222] [INFO ] Using serverListUpdater PollingServerListUpdater
[2020-06-25T13:03:46.046Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-2] [115] [INFO ] Flipping property: recension.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T13:03:46.046Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-2] [150] [INFO ] DynamicServerListLoadBalancer for client recension initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=recension,current list of Servers=[192.168.1.3:8085],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.3:8085;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 01:00:00 CET 1970;	First connection made: Thu Jan 01 01:00:00 CET 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5e8e4929
[2020-06-25T13:03:46.046Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-4] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T13:03:46.046Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-7] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T13:03:46.046Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-6] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T13:03:46.046Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-8] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T13:03:46.046Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-1] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T13:03:46.046Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-2] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T13:03:47.047Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-6] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/4/1
[2020-06-25T13:03:47.047Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-2] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/4
[2020-06-25T13:03:47.047Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-4] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/5
[2020-06-25T13:03:47.047Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-5] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/5/1
[2020-06-25T13:03:47.047Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-2] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T13:03:47.047Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-6] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T13:03:47.047Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-4] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T13:03:47.047Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-5] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T13:03:47.047Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-9] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/6
[2020-06-25T13:03:47.047Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-9] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T13:03:47.047Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-3] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/6/1
[2020-06-25T13:03:47.047Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-3] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T13:03:47.047Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-5] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/7/1
[2020-06-25T13:03:47.047Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-1] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/8
[2020-06-25T13:03:47.047Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-3] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/7
[2020-06-25T13:03:47.047Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-1] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T13:03:47.047Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-5] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T13:03:47.047Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-3] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T13:03:47.047Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-2] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/9
[2020-06-25T13:03:47.047Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-7] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/8/1
[2020-06-25T13:03:47.047Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-7] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T13:03:47.047Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-2] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T13:03:47.047Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-1] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/9/1
[2020-06-25T13:03:47.047Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-1] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T13:03:47.047Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-4] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/10/1
[2020-06-25T13:03:47.047Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-4] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T13:03:47.047Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-1] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/10
[2020-06-25T13:03:47.047Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-1] [132] [WARN ] The Hystrix timeout of 60000ms for the command recension is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T13:03:47.047Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [PollingServerListUpdater-0] [115] [INFO ] Flipping property: recension.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T13:06:27.027Z] [com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2] [Thread-9] [53] [INFO ] Shutting down the Executor Pool for PollingServerListUpdater
[2020-06-25T13:06:27.027Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [SpringContextShutdownHook] [65] [INFO ] Unregistering application ZUUL with eureka with status DOWN
[2020-06-25T13:06:27.027Z] [com.netflix.discovery.DiscoveryClient$3] [SpringContextShutdownHook] [1328] [WARN ] Saw local status change event StatusChangeEvent [timestamp=1593083187832, current=DOWN, previous=UP]
[2020-06-25T13:06:27.027Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [847] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080: registering service...
[2020-06-25T13:06:27.027Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [SpringContextShutdownHook] [79] [INFO ] Stopping filter initializer
[2020-06-25T13:06:27.027Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [856] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - registration status: 204
[2020-06-25T13:06:27.027Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [SpringContextShutdownHook] [218] [INFO ] Shutting down ExecutorService 'applicationTaskExecutor'
[2020-06-25T13:06:27.027Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [SpringContextShutdownHook] [67] [INFO ] Shutdown hook removed for: NFLoadBalancer-PingTimer-auth
[2020-06-25T13:06:27.027Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [SpringContextShutdownHook] [72] [INFO ] Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:241)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1068)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1068)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948)
[2020-06-25T13:06:27.027Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [SpringContextShutdownHook] [67] [INFO ] Shutdown hook removed for: NFLoadBalancer-PingTimer-recension
[2020-06-25T13:06:27.027Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [SpringContextShutdownHook] [72] [INFO ] Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:241)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1068)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1068)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948)
[2020-06-25T13:06:27.027Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [909] [INFO ] Shutting down DiscoveryClient ...
[2020-06-25T13:06:30.030Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [945] [INFO ] Unregistering ...
[2020-06-25T13:06:30.030Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [947] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - deregister  status: 200
[2020-06-25T13:06:30.030Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [934] [INFO ] Completed shut down of DiscoveryClient
[2020-06-25T13:06:36.036Z] [org.springframework.boot.SpringApplication] [main] [651] [INFO ] No active profile set, falling back to default profiles: default
[2020-06-25T13:06:37.037Z] [org.springframework.boot.actuate.endpoint.EndpointId] [main] [155] [WARN ] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[2020-06-25T13:06:37.037Z] [org.springframework.boot.actuate.endpoint.EndpointId] [main] [155] [WARN ] Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
[2020-06-25T13:06:37.037Z] [org.springframework.cloud.context.scope.GenericScope] [main] [295] [INFO ] BeanFactory id=21717a2c-1a0d-34a1-be9a-a88300360682
[2020-06-25T13:06:37.037Z] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [330] [INFO ] Bean 'com.programatori.zuul.AuthClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2020-06-25T13:06:38.038Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [92] [INFO ] Tomcat initialized with port(s): 8080 (https)
[2020-06-25T13:06:38.038Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T13:06:38.038Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting service [Tomcat]
[2020-06-25T13:06:38.038Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.33]
[2020-06-25T13:06:38.038Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2020-06-25T13:06:38.038Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] [284] [INFO ] Root WebApplicationContext: initialization completed in 1388 ms
[2020-06-25T13:06:38.038Z] [com.netflix.config.sources.URLConfigurationSource] [main] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-06-25T13:06:38.038Z] [com.netflix.config.sources.URLConfigurationSource] [main] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-06-25T13:06:38.038Z] [com.netflix.config.DynamicPropertyFactory] [main] [281] [INFO ] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@40ed1802
[2020-06-25T13:06:38.038Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [main] [72] [INFO ] Setting initial instance status as: STARTING
[2020-06-25T13:06:38.038Z] [com.netflix.discovery.DiscoveryClient] [main] [368] [INFO ] Initializing Eureka in region us-east-1
[2020-06-25T13:06:39.039Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2020-06-25T13:06:39.039Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2020-06-25T13:06:39.039Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2020-06-25T13:06:39.039Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2020-06-25T13:06:39.039Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [main] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-06-25T13:06:39.039Z] [com.netflix.discovery.DiscoveryClient] [main] [981] [INFO ] Disable delta property : false
[2020-06-25T13:06:39.039Z] [com.netflix.discovery.DiscoveryClient] [main] [982] [INFO ] Single vip registry refresh property : null
[2020-06-25T13:06:39.039Z] [com.netflix.discovery.DiscoveryClient] [main] [983] [INFO ] Force full registry fetch : false
[2020-06-25T13:06:39.039Z] [com.netflix.discovery.DiscoveryClient] [main] [984] [INFO ] Application is null : false
[2020-06-25T13:06:39.039Z] [com.netflix.discovery.DiscoveryClient] [main] [985] [INFO ] Registered Applications size is zero : true
[2020-06-25T13:06:39.039Z] [com.netflix.discovery.DiscoveryClient] [main] [987] [INFO ] Application version is -1: true
[2020-06-25T13:06:39.039Z] [com.netflix.discovery.DiscoveryClient] [main] [1070] [INFO ] Getting all instance registry info from the eureka server
[2020-06-25T13:06:39.039Z] [com.netflix.discovery.DiscoveryClient] [main] [1079] [INFO ] The response status is 200
[2020-06-25T13:06:39.039Z] [com.netflix.discovery.DiscoveryClient] [main] [1294] [INFO ] Starting heartbeat executor: renew interval is: 30
[2020-06-25T13:06:39.039Z] [com.netflix.discovery.InstanceInfoReplicator] [main] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2020-06-25T13:06:39.039Z] [com.netflix.discovery.DiscoveryClient] [main] [468] [INFO ] Discovery Client initialized at timestamp 1593083199423 with initial instances count: 5
[2020-06-25T13:06:39.039Z] [com.netflix.config.sources.URLConfigurationSource] [main] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-06-25T13:06:39.039Z] [com.netflix.config.sources.URLConfigurationSource] [main] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-06-25T13:06:39.039Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [main] [181] [INFO ] Initializing ExecutorService 'applicationTaskExecutor'
[2020-06-25T13:06:39.039Z] [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger] [main] [86] [WARN ] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2020-06-25T13:06:39.039Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [main] [67] [INFO ] Starting filter initializer
[2020-06-25T13:06:39.039Z] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [main] [58] [INFO ] Exposing 2 endpoint(s) beneath base path '/actuator'
[2020-06-25T13:06:39.039Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [main] [41] [INFO ] Registering application ZUUL with eureka with status UP
[2020-06-25T13:06:39.039Z] [com.netflix.discovery.DiscoveryClient$3] [main] [1330] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1593083199953, current=UP, previous=STARTING]
[2020-06-25T13:06:39.039Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [847] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080: registering service...
[2020-06-25T13:06:39.039Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T13:06:39.039Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [856] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - registration status: 204
[2020-06-25T13:06:40.040Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [204] [INFO ] Tomcat started on port(s): 8080 (https) with context path '/api'
[2020-06-25T13:06:40.040Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] [main] [145] [INFO ] Updating port to 8080
[2020-06-25T13:06:40.040Z] [org.springframework.boot.StartupInfoLogger] [main] [61] [INFO ] Started ZuulApplication in 3.698 seconds (JVM running for 4.331)
[2020-06-25T13:06:40.040Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(3)-192.168.1.3] [173] [INFO ] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2020-06-25T13:06:40.040Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(3)-192.168.1.3] [525] [INFO ] Initializing Servlet 'dispatcherServlet'
[2020-06-25T13:06:40.040Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(3)-192.168.1.3] [547] [INFO ] Completed initialization in 8 ms
[2020-06-25T13:06:44.044Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-5] [53] [INFO ] GET request to https://127.0.0.1:8080/api/search/get
[2020-06-25T13:06:45.045Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-5] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T13:06:45.045Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [https-jsse-nio-8080-exec-5] [58] [INFO ] Shutdown hook installed for: NFLoadBalancer-PingTimer-auth
[2020-06-25T13:06:45.045Z] [com.netflix.loadbalancer.BaseLoadBalancer] [https-jsse-nio-8080-exec-5] [197] [INFO ] Client: auth instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2020-06-25T13:06:45.045Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-5] [222] [INFO ] Using serverListUpdater PollingServerListUpdater
[2020-06-25T13:06:45.045Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-5] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T13:06:45.045Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-5] [150] [INFO ] DynamicServerListLoadBalancer for client auth initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[192.168.1.3:8081],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.3:8081;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 01:00:00 CET 1970;	First connection made: Thu Jan 01 01:00:00 CET 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@51e61ad2
[2020-06-25T13:06:46.046Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [PollingServerListUpdater-0] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T13:06:47.047Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-10] [53] [INFO ] GET request to https://127.0.0.1:8080/api/search/get
[2020-06-25T13:06:51.051Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-5] [53] [INFO ] GET request to https://127.0.0.1:8080/api/search/get
[2020-06-25T13:06:53.053Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-10] [53] [INFO ] GET request to https://127.0.0.1:8080/api/search/get
[2020-06-25T13:06:59.059Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-5] [53] [INFO ] POST request to https://127.0.0.1:8080/api/auth/login
[2020-06-25T13:07:00.000Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-10] [53] [INFO ] GET request to https://127.0.0.1:8080/api/search/get
[2020-06-25T13:07:33.033Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-6] [53] [INFO ] GET request to https://localhost:8080/api/search/get
[2020-06-25T13:07:34.034Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-7] [53] [INFO ] GET request to https://localhost:8080/api/search/get
[2020-06-25T13:07:35.035Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-8] [53] [INFO ] GET request to https://localhost:8080/api/search/get
[2020-06-25T13:07:41.041Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-9] [53] [INFO ] GET request to https://localhost:8080/api/search/
[2020-06-25T13:07:42.042Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-10] [53] [INFO ] GET request to https://localhost:8080/api/search
[2020-06-25T13:07:47.047Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-5] [53] [INFO ] GET request to https://127.0.0.1:8080/api/search/get
[2020-06-25T13:08:38.038Z] [com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2] [Thread-9] [53] [INFO ] Shutting down the Executor Pool for PollingServerListUpdater
[2020-06-25T13:08:38.038Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [SpringContextShutdownHook] [65] [INFO ] Unregistering application ZUUL with eureka with status DOWN
[2020-06-25T13:08:38.038Z] [com.netflix.discovery.DiscoveryClient$3] [SpringContextShutdownHook] [1328] [WARN ] Saw local status change event StatusChangeEvent [timestamp=1593083318446, current=DOWN, previous=UP]
[2020-06-25T13:08:38.038Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [847] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080: registering service...
[2020-06-25T13:08:38.038Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [SpringContextShutdownHook] [79] [INFO ] Stopping filter initializer
[2020-06-25T13:08:38.038Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [856] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - registration status: 204
[2020-06-25T13:08:38.038Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [SpringContextShutdownHook] [218] [INFO ] Shutting down ExecutorService 'applicationTaskExecutor'
[2020-06-25T13:08:38.038Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [SpringContextShutdownHook] [67] [INFO ] Shutdown hook removed for: NFLoadBalancer-PingTimer-auth
[2020-06-25T13:08:38.038Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [SpringContextShutdownHook] [72] [INFO ] Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:241)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1068)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1068)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948)
[2020-06-25T13:08:38.038Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [909] [INFO ] Shutting down DiscoveryClient ...
[2020-06-25T13:08:41.041Z] [com.netflix.discovery.TimedSupervisorTask] [DiscoveryClient-0] [90] [WARN ] task supervisor shutting down, can't accept the task
[2020-06-25T13:08:41.041Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [945] [INFO ] Unregistering ...
[2020-06-25T13:08:41.041Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [947] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - deregister  status: 200
[2020-06-25T13:08:41.041Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [934] [INFO ] Completed shut down of DiscoveryClient
[2020-06-25T13:08:46.046Z] [org.springframework.boot.SpringApplication] [main] [651] [INFO ] No active profile set, falling back to default profiles: default
[2020-06-25T13:08:47.047Z] [org.springframework.boot.actuate.endpoint.EndpointId] [main] [155] [WARN ] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[2020-06-25T13:08:47.047Z] [org.springframework.boot.actuate.endpoint.EndpointId] [main] [155] [WARN ] Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
[2020-06-25T13:08:47.047Z] [org.springframework.cloud.context.scope.GenericScope] [main] [295] [INFO ] BeanFactory id=21717a2c-1a0d-34a1-be9a-a88300360682
[2020-06-25T13:08:47.047Z] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [330] [INFO ] Bean 'com.programatori.zuul.AuthClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2020-06-25T13:08:47.047Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [92] [INFO ] Tomcat initialized with port(s): 8080 (https)
[2020-06-25T13:08:47.047Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T13:08:47.047Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting service [Tomcat]
[2020-06-25T13:08:47.047Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.33]
[2020-06-25T13:08:48.048Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2020-06-25T13:08:48.048Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] [284] [INFO ] Root WebApplicationContext: initialization completed in 1162 ms
[2020-06-25T13:08:48.048Z] [com.netflix.config.sources.URLConfigurationSource] [main] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-06-25T13:08:48.048Z] [com.netflix.config.sources.URLConfigurationSource] [main] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-06-25T13:08:48.048Z] [com.netflix.config.DynamicPropertyFactory] [main] [281] [INFO ] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@357bc488
[2020-06-25T13:08:48.048Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [main] [72] [INFO ] Setting initial instance status as: STARTING
[2020-06-25T13:08:48.048Z] [com.netflix.discovery.DiscoveryClient] [main] [368] [INFO ] Initializing Eureka in region us-east-1
[2020-06-25T13:08:48.048Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2020-06-25T13:08:48.048Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2020-06-25T13:08:48.048Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2020-06-25T13:08:48.048Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2020-06-25T13:08:48.048Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [main] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-06-25T13:08:48.048Z] [com.netflix.discovery.DiscoveryClient] [main] [981] [INFO ] Disable delta property : false
[2020-06-25T13:08:48.048Z] [com.netflix.discovery.DiscoveryClient] [main] [982] [INFO ] Single vip registry refresh property : null
[2020-06-25T13:08:48.048Z] [com.netflix.discovery.DiscoveryClient] [main] [983] [INFO ] Force full registry fetch : false
[2020-06-25T13:08:48.048Z] [com.netflix.discovery.DiscoveryClient] [main] [984] [INFO ] Application is null : false
[2020-06-25T13:08:48.048Z] [com.netflix.discovery.DiscoveryClient] [main] [985] [INFO ] Registered Applications size is zero : true
[2020-06-25T13:08:48.048Z] [com.netflix.discovery.DiscoveryClient] [main] [987] [INFO ] Application version is -1: true
[2020-06-25T13:08:48.048Z] [com.netflix.discovery.DiscoveryClient] [main] [1070] [INFO ] Getting all instance registry info from the eureka server
[2020-06-25T13:08:49.049Z] [com.netflix.discovery.DiscoveryClient] [main] [1079] [INFO ] The response status is 200
[2020-06-25T13:08:49.049Z] [com.netflix.discovery.DiscoveryClient] [main] [1294] [INFO ] Starting heartbeat executor: renew interval is: 30
[2020-06-25T13:08:49.049Z] [com.netflix.discovery.InstanceInfoReplicator] [main] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2020-06-25T13:08:49.049Z] [com.netflix.discovery.DiscoveryClient] [main] [468] [INFO ] Discovery Client initialized at timestamp 1593083329059 with initial instances count: 6
[2020-06-25T13:08:49.049Z] [com.netflix.config.sources.URLConfigurationSource] [main] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-06-25T13:08:49.049Z] [com.netflix.config.sources.URLConfigurationSource] [main] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-06-25T13:08:49.049Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [main] [181] [INFO ] Initializing ExecutorService 'applicationTaskExecutor'
[2020-06-25T13:08:49.049Z] [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger] [main] [86] [WARN ] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2020-06-25T13:08:49.049Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [main] [67] [INFO ] Starting filter initializer
[2020-06-25T13:08:49.049Z] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [main] [58] [INFO ] Exposing 2 endpoint(s) beneath base path '/actuator'
[2020-06-25T13:08:49.049Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [main] [41] [INFO ] Registering application ZUUL with eureka with status UP
[2020-06-25T13:08:49.049Z] [com.netflix.discovery.DiscoveryClient$3] [main] [1330] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1593083329575, current=UP, previous=STARTING]
[2020-06-25T13:08:49.049Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [847] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080: registering service...
[2020-06-25T13:08:49.049Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T13:08:49.049Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [856] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - registration status: 204
[2020-06-25T13:08:49.049Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [204] [INFO ] Tomcat started on port(s): 8080 (https) with context path '/api'
[2020-06-25T13:08:49.049Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] [main] [145] [INFO ] Updating port to 8080
[2020-06-25T13:08:49.049Z] [org.springframework.boot.StartupInfoLogger] [main] [61] [INFO ] Started ZuulApplication in 3.193 seconds (JVM running for 3.735)
[2020-06-25T13:08:49.049Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(2)-192.168.1.3] [173] [INFO ] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2020-06-25T13:08:49.049Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(2)-192.168.1.3] [525] [INFO ] Initializing Servlet 'dispatcherServlet'
[2020-06-25T13:08:49.049Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(2)-192.168.1.3] [547] [INFO ] Completed initialization in 9 ms
[2020-06-25T13:09:01.001Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-5] [53] [INFO ] GET request to https://127.0.0.1:8080/api/search/get
[2020-06-25T13:09:01.001Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-5] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T13:09:01.001Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [https-jsse-nio-8080-exec-5] [58] [INFO ] Shutdown hook installed for: NFLoadBalancer-PingTimer-auth
[2020-06-25T13:09:01.001Z] [com.netflix.loadbalancer.BaseLoadBalancer] [https-jsse-nio-8080-exec-5] [197] [INFO ] Client: auth instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2020-06-25T13:09:01.001Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-5] [222] [INFO ] Using serverListUpdater PollingServerListUpdater
[2020-06-25T13:09:01.001Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-5] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T13:09:01.001Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-5] [150] [INFO ] DynamicServerListLoadBalancer for client auth initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[192.168.1.3:8081],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.3:8081;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 01:00:00 CET 1970;	First connection made: Thu Jan 01 01:00:00 CET 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4e4f0536
[2020-06-25T13:09:01.001Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-5] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/1
[2020-06-25T13:09:01.001Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-4] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/1/1
[2020-06-25T13:09:01.001Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-8] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/2/1
[2020-06-25T13:09:01.001Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-9] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/3/1
[2020-06-25T13:09:01.001Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-6] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/2
[2020-06-25T13:09:01.001Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-3] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/3
[2020-06-25T13:09:02.002Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-6] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/4
[2020-06-25T13:09:02.002Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-1] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/4/1
[2020-06-25T13:09:02.002Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-2] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/5/1
[2020-06-25T13:09:02.002Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-7] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/5
[2020-06-25T13:09:02.002Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-8] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/6
[2020-06-25T13:09:02.002Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-1] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/6/1
[2020-06-25T13:09:02.002Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-3] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/7
[2020-06-25T13:09:02.002Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-8] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/7/1
[2020-06-25T13:09:02.002Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-7] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/8
[2020-06-25T13:09:02.002Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-10] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/8/1
[2020-06-25T13:09:02.002Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-2] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/9
[2020-06-25T13:09:02.002Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-6] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/9/1
[2020-06-25T13:09:02.002Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-7] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/10
[2020-06-25T13:09:02.002Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-4] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/10/1
[2020-06-25T13:09:02.002Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [PollingServerListUpdater-0] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T13:09:10.010Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-10] [53] [INFO ] GET request to https://127.0.0.1:8080/api/rental/pending-requests/1
[2020-06-25T13:09:10.010Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-10] [115] [INFO ] Flipping property: rental.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T13:09:10.010Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [https-jsse-nio-8080-exec-10] [58] [INFO ] Shutdown hook installed for: NFLoadBalancer-PingTimer-rental
[2020-06-25T13:09:10.010Z] [com.netflix.loadbalancer.BaseLoadBalancer] [https-jsse-nio-8080-exec-10] [197] [INFO ] Client: rental instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rental,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2020-06-25T13:09:10.010Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-10] [222] [INFO ] Using serverListUpdater PollingServerListUpdater
[2020-06-25T13:09:10.010Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-10] [115] [INFO ] Flipping property: rental.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T13:09:10.010Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-10] [150] [INFO ] DynamicServerListLoadBalancer for client rental initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rental,current list of Servers=[192.168.1.3:8084],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.3:8084;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 01:00:00 CET 1970;	First connection made: Thu Jan 01 01:00:00 CET 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@574daa16
[2020-06-25T13:09:10.010Z] [org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand] [https-jsse-nio-8080-exec-10] [132] [WARN ] The Hystrix timeout of 60000ms for the command rental is set lower than the combination of the Ribbon read and connect timeout, 122000ms.
[2020-06-25T13:09:11.011Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [PollingServerListUpdater-0] [115] [INFO ] Flipping property: rental.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T13:09:11.011Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-10] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/1
[2020-06-25T13:09:11.011Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-8] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/2/1
[2020-06-25T13:09:11.011Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-2] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/1/1
[2020-06-25T13:09:11.011Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-3] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/2
[2020-06-25T13:09:11.011Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-5] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/3
[2020-06-25T13:09:11.011Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-9] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/3/1
[2020-06-25T13:09:11.011Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-5] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/4
[2020-06-25T13:09:11.011Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-7] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/4/1
[2020-06-25T13:09:11.011Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-9] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/5
[2020-06-25T13:09:11.011Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-6] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/5/1
[2020-06-25T13:09:11.011Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-3] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/6
[2020-06-25T13:09:11.011Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-2] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/6/1
[2020-06-25T13:09:11.011Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-7] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/7
[2020-06-25T13:09:11.011Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-2] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/7/1
[2020-06-25T13:09:11.011Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-6] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/8
[2020-06-25T13:09:11.011Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-10] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/8/1
[2020-06-25T13:09:11.011Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-4] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/9
[2020-06-25T13:09:11.011Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-8] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/9/1
[2020-06-25T13:09:11.011Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-3] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/10/1
[2020-06-25T13:09:11.011Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-5] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/10
[2020-06-25T13:09:11.011Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-4] [53] [INFO ] GET request to https://127.0.0.1:8080/api/search/get
[2020-06-25T13:09:58.058Z] [com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2] [Thread-9] [53] [INFO ] Shutting down the Executor Pool for PollingServerListUpdater
[2020-06-25T13:09:58.058Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [SpringContextShutdownHook] [65] [INFO ] Unregistering application ZUUL with eureka with status DOWN
[2020-06-25T13:09:58.058Z] [com.netflix.discovery.DiscoveryClient$3] [SpringContextShutdownHook] [1328] [WARN ] Saw local status change event StatusChangeEvent [timestamp=1593083398080, current=DOWN, previous=UP]
[2020-06-25T13:09:58.058Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [847] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080: registering service...
[2020-06-25T13:09:58.058Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [SpringContextShutdownHook] [79] [INFO ] Stopping filter initializer
[2020-06-25T13:09:58.058Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [SpringContextShutdownHook] [218] [INFO ] Shutting down ExecutorService 'applicationTaskExecutor'
[2020-06-25T13:09:58.058Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [856] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - registration status: 204
[2020-06-25T13:09:58.058Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [SpringContextShutdownHook] [67] [INFO ] Shutdown hook removed for: NFLoadBalancer-PingTimer-auth
[2020-06-25T13:09:58.058Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [SpringContextShutdownHook] [72] [INFO ] Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:241)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1068)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1068)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948)
[2020-06-25T13:09:58.058Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [SpringContextShutdownHook] [67] [INFO ] Shutdown hook removed for: NFLoadBalancer-PingTimer-rental
[2020-06-25T13:09:58.058Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [SpringContextShutdownHook] [72] [INFO ] Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:241)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1068)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1068)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948)
[2020-06-25T13:09:58.058Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [909] [INFO ] Shutting down DiscoveryClient ...
[2020-06-25T13:10:01.001Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [945] [INFO ] Unregistering ...
[2020-06-25T13:10:01.001Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [947] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - deregister  status: 200
[2020-06-25T13:10:01.001Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [934] [INFO ] Completed shut down of DiscoveryClient
[2020-06-25T13:10:07.007Z] [org.springframework.boot.SpringApplication] [main] [651] [INFO ] No active profile set, falling back to default profiles: default
[2020-06-25T13:10:08.008Z] [org.springframework.boot.actuate.endpoint.EndpointId] [main] [155] [WARN ] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[2020-06-25T13:10:08.008Z] [org.springframework.boot.actuate.endpoint.EndpointId] [main] [155] [WARN ] Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
[2020-06-25T13:10:08.008Z] [org.springframework.cloud.context.scope.GenericScope] [main] [295] [INFO ] BeanFactory id=21717a2c-1a0d-34a1-be9a-a88300360682
[2020-06-25T13:10:08.008Z] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [330] [INFO ] Bean 'com.programatori.zuul.AuthClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2020-06-25T13:10:08.008Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [92] [INFO ] Tomcat initialized with port(s): 8080 (https)
[2020-06-25T13:10:08.008Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T13:10:08.008Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting service [Tomcat]
[2020-06-25T13:10:08.008Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.33]
[2020-06-25T13:10:08.008Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2020-06-25T13:10:08.008Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] [284] [INFO ] Root WebApplicationContext: initialization completed in 1272 ms
[2020-06-25T13:10:08.008Z] [com.netflix.config.sources.URLConfigurationSource] [main] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-06-25T13:10:08.008Z] [com.netflix.config.sources.URLConfigurationSource] [main] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-06-25T13:10:08.008Z] [com.netflix.config.DynamicPropertyFactory] [main] [281] [INFO ] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@764b14b8
[2020-06-25T13:10:09.009Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [main] [72] [INFO ] Setting initial instance status as: STARTING
[2020-06-25T13:10:09.009Z] [com.netflix.discovery.DiscoveryClient] [main] [368] [INFO ] Initializing Eureka in region us-east-1
[2020-06-25T13:10:09.009Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2020-06-25T13:10:09.009Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2020-06-25T13:10:09.009Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2020-06-25T13:10:09.009Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2020-06-25T13:10:09.009Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [main] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-06-25T13:10:09.009Z] [com.netflix.discovery.DiscoveryClient] [main] [981] [INFO ] Disable delta property : false
[2020-06-25T13:10:09.009Z] [com.netflix.discovery.DiscoveryClient] [main] [982] [INFO ] Single vip registry refresh property : null
[2020-06-25T13:10:09.009Z] [com.netflix.discovery.DiscoveryClient] [main] [983] [INFO ] Force full registry fetch : false
[2020-06-25T13:10:09.009Z] [com.netflix.discovery.DiscoveryClient] [main] [984] [INFO ] Application is null : false
[2020-06-25T13:10:09.009Z] [com.netflix.discovery.DiscoveryClient] [main] [985] [INFO ] Registered Applications size is zero : true
[2020-06-25T13:10:09.009Z] [com.netflix.discovery.DiscoveryClient] [main] [987] [INFO ] Application version is -1: true
[2020-06-25T13:10:09.009Z] [com.netflix.discovery.DiscoveryClient] [main] [1070] [INFO ] Getting all instance registry info from the eureka server
[2020-06-25T13:10:09.009Z] [com.netflix.discovery.DiscoveryClient] [main] [1079] [INFO ] The response status is 200
[2020-06-25T13:10:09.009Z] [com.netflix.discovery.DiscoveryClient] [main] [1294] [INFO ] Starting heartbeat executor: renew interval is: 30
[2020-06-25T13:10:09.009Z] [com.netflix.discovery.InstanceInfoReplicator] [main] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2020-06-25T13:10:09.009Z] [com.netflix.discovery.DiscoveryClient] [main] [468] [INFO ] Discovery Client initialized at timestamp 1593083409950 with initial instances count: 5
[2020-06-25T13:10:10.010Z] [com.netflix.config.sources.URLConfigurationSource] [main] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-06-25T13:10:10.010Z] [com.netflix.config.sources.URLConfigurationSource] [main] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-06-25T13:10:10.010Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [main] [181] [INFO ] Initializing ExecutorService 'applicationTaskExecutor'
[2020-06-25T13:10:10.010Z] [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger] [main] [86] [WARN ] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2020-06-25T13:10:10.010Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [main] [67] [INFO ] Starting filter initializer
[2020-06-25T13:10:10.010Z] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [main] [58] [INFO ] Exposing 2 endpoint(s) beneath base path '/actuator'
[2020-06-25T13:10:10.010Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [main] [41] [INFO ] Registering application ZUUL with eureka with status UP
[2020-06-25T13:10:10.010Z] [com.netflix.discovery.DiscoveryClient$3] [main] [1330] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1593083410641, current=UP, previous=STARTING]
[2020-06-25T13:10:10.010Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [847] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080: registering service...
[2020-06-25T13:10:10.010Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T13:10:10.010Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [856] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - registration status: 204
[2020-06-25T13:10:10.010Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [204] [INFO ] Tomcat started on port(s): 8080 (https) with context path '/api'
[2020-06-25T13:10:10.010Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] [main] [145] [INFO ] Updating port to 8080
[2020-06-25T13:10:10.010Z] [org.springframework.boot.StartupInfoLogger] [main] [61] [INFO ] Started ZuulApplication in 4.066 seconds (JVM running for 4.724)
[2020-06-25T13:10:11.011Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(3)-192.168.1.3] [173] [INFO ] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2020-06-25T13:10:11.011Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(3)-192.168.1.3] [525] [INFO ] Initializing Servlet 'dispatcherServlet'
[2020-06-25T13:10:11.011Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(3)-192.168.1.3] [547] [INFO ] Completed initialization in 10 ms
[2020-06-25T13:11:42.042Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-5] [53] [INFO ] GET request to https://127.0.0.1:8080/api/search/get
[2020-06-25T13:11:43.043Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-5] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T13:11:43.043Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [https-jsse-nio-8080-exec-5] [58] [INFO ] Shutdown hook installed for: NFLoadBalancer-PingTimer-auth
[2020-06-25T13:11:43.043Z] [com.netflix.loadbalancer.BaseLoadBalancer] [https-jsse-nio-8080-exec-5] [197] [INFO ] Client: auth instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2020-06-25T13:11:43.043Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-5] [222] [INFO ] Using serverListUpdater PollingServerListUpdater
[2020-06-25T13:11:43.043Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-5] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T13:11:43.043Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-5] [150] [INFO ] DynamicServerListLoadBalancer for client auth initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[192.168.1.3:8081],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.3:8081;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 01:00:00 CET 1970;	First connection made: Thu Jan 01 01:00:00 CET 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2c7d3376
[2020-06-25T13:11:43.043Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-5] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/1
[2020-06-25T13:11:43.043Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-3] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/2/1
[2020-06-25T13:11:43.043Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-2] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/3
[2020-06-25T13:11:43.043Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-6] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/1/1
[2020-06-25T13:11:43.043Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-7] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/3/1
[2020-06-25T13:11:43.043Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-1] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/2
[2020-06-25T13:11:43.043Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-8] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/4
[2020-06-25T13:11:43.043Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-9] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/4/1
[2020-06-25T13:11:43.043Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-2] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/5
[2020-06-25T13:11:43.043Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-6] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/5/1
[2020-06-25T13:11:43.043Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-3] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/6
[2020-06-25T13:11:43.043Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-4] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/6/1
[2020-06-25T13:11:43.043Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-10] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/7
[2020-06-25T13:11:43.043Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-8] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/7/1
[2020-06-25T13:11:43.043Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-1] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/8
[2020-06-25T13:11:43.043Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-7] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/8/1
[2020-06-25T13:11:43.043Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-9] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/9
[2020-06-25T13:11:43.043Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-6] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/9/1
[2020-06-25T13:11:43.043Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-9] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/10
[2020-06-25T13:11:44.044Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-3] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/10/1
[2020-06-25T13:11:44.044Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [PollingServerListUpdater-0] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T13:11:50.050Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-10] [53] [INFO ] GET request to https://127.0.0.1:8080/api/rental/pending-requests/1
[2020-06-25T13:11:58.058Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-3] [53] [INFO ] POST request to https://127.0.0.1:8080/api/rental
[2020-06-25T13:12:00.000Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-7] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/1
[2020-06-25T13:12:00.000Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-5] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/1/1
[2020-06-25T13:12:00.000Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-9] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/2
[2020-06-25T13:12:00.000Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-7] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/2/1
[2020-06-25T13:12:01.001Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-3] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/3
[2020-06-25T13:12:01.001Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-10] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/4
[2020-06-25T13:12:01.001Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-1] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/3/1
[2020-06-25T13:12:01.001Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-6] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/4/1
[2020-06-25T13:12:01.001Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-7] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/5
[2020-06-25T13:12:01.001Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-5] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/5/1
[2020-06-25T13:12:01.001Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-3] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/6
[2020-06-25T13:12:01.001Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-2] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/6/1
[2020-06-25T13:12:01.001Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-10] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/7
[2020-06-25T13:12:01.001Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-1] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/7/1
[2020-06-25T13:12:01.001Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-5] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/8/1
[2020-06-25T13:12:01.001Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-9] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/9
[2020-06-25T13:12:01.001Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-6] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/8
[2020-06-25T13:12:01.001Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-7] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/9/1
[2020-06-25T13:12:01.001Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-1] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/grade/10/1
[2020-06-25T13:12:01.001Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-8] [53] [INFO ] GET request to https://127.0.0.1:8080/api/recension/rating/10
[2020-06-25T13:12:01.001Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-3] [53] [INFO ] GET request to https://127.0.0.1:8080/api/search/get
[2020-06-25T13:13:24.024Z] [com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2] [Thread-9] [53] [INFO ] Shutting down the Executor Pool for PollingServerListUpdater
[2020-06-25T13:13:24.024Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [SpringContextShutdownHook] [65] [INFO ] Unregistering application ZUUL with eureka with status DOWN
[2020-06-25T13:13:24.024Z] [com.netflix.discovery.DiscoveryClient$3] [SpringContextShutdownHook] [1328] [WARN ] Saw local status change event StatusChangeEvent [timestamp=1593083604954, current=DOWN, previous=UP]
[2020-06-25T13:13:24.024Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [847] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080: registering service...
[2020-06-25T13:13:24.024Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [SpringContextShutdownHook] [79] [INFO ] Stopping filter initializer
[2020-06-25T13:13:24.024Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [856] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - registration status: 204
[2020-06-25T13:13:24.024Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [SpringContextShutdownHook] [218] [INFO ] Shutting down ExecutorService 'applicationTaskExecutor'
[2020-06-25T13:13:24.024Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [SpringContextShutdownHook] [67] [INFO ] Shutdown hook removed for: NFLoadBalancer-PingTimer-auth
[2020-06-25T13:13:24.024Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [SpringContextShutdownHook] [72] [INFO ] Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:241)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1068)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1068)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948)
[2020-06-25T13:13:24.024Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [909] [INFO ] Shutting down DiscoveryClient ...
[2020-06-25T13:13:27.027Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [945] [INFO ] Unregistering ...
[2020-06-25T13:13:27.027Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [947] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - deregister  status: 200
[2020-06-25T13:13:27.027Z] [com.netflix.discovery.DiscoveryClient] [SpringContextShutdownHook] [934] [INFO ] Completed shut down of DiscoveryClient
[2020-06-25T13:13:32.032Z] [org.springframework.boot.SpringApplication] [main] [651] [INFO ] No active profile set, falling back to default profiles: default
[2020-06-25T13:13:33.033Z] [org.springframework.boot.actuate.endpoint.EndpointId] [main] [155] [WARN ] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[2020-06-25T13:13:33.033Z] [org.springframework.boot.actuate.endpoint.EndpointId] [main] [155] [WARN ] Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
[2020-06-25T13:13:33.033Z] [org.springframework.cloud.context.scope.GenericScope] [main] [295] [INFO ] BeanFactory id=21717a2c-1a0d-34a1-be9a-a88300360682
[2020-06-25T13:13:33.033Z] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [330] [INFO ] Bean 'com.programatori.zuul.AuthClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2020-06-25T13:13:34.034Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [92] [INFO ] Tomcat initialized with port(s): 8080 (https)
[2020-06-25T13:13:34.034Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T13:13:34.034Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting service [Tomcat]
[2020-06-25T13:13:34.034Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.33]
[2020-06-25T13:13:34.034Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2020-06-25T13:13:34.034Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] [284] [INFO ] Root WebApplicationContext: initialization completed in 2233 ms
[2020-06-25T13:13:34.034Z] [com.netflix.config.sources.URLConfigurationSource] [main] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-06-25T13:13:34.034Z] [com.netflix.config.sources.URLConfigurationSource] [main] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-06-25T13:13:34.034Z] [com.netflix.config.DynamicPropertyFactory] [main] [281] [INFO ] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7f0b93b4
[2020-06-25T13:13:35.035Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [main] [72] [INFO ] Setting initial instance status as: STARTING
[2020-06-25T13:13:35.035Z] [com.netflix.discovery.DiscoveryClient] [main] [368] [INFO ] Initializing Eureka in region us-east-1
[2020-06-25T13:13:35.035Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2020-06-25T13:13:35.035Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2020-06-25T13:13:35.035Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2020-06-25T13:13:35.035Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2020-06-25T13:13:35.035Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [main] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-06-25T13:13:36.036Z] [com.netflix.discovery.DiscoveryClient] [main] [981] [INFO ] Disable delta property : false
[2020-06-25T13:13:36.036Z] [com.netflix.discovery.DiscoveryClient] [main] [982] [INFO ] Single vip registry refresh property : null
[2020-06-25T13:13:36.036Z] [com.netflix.discovery.DiscoveryClient] [main] [983] [INFO ] Force full registry fetch : false
[2020-06-25T13:13:36.036Z] [com.netflix.discovery.DiscoveryClient] [main] [984] [INFO ] Application is null : false
[2020-06-25T13:13:36.036Z] [com.netflix.discovery.DiscoveryClient] [main] [985] [INFO ] Registered Applications size is zero : true
[2020-06-25T13:13:36.036Z] [com.netflix.discovery.DiscoveryClient] [main] [987] [INFO ] Application version is -1: true
[2020-06-25T13:13:36.036Z] [com.netflix.discovery.DiscoveryClient] [main] [1070] [INFO ] Getting all instance registry info from the eureka server
[2020-06-25T13:13:36.036Z] [com.netflix.discovery.DiscoveryClient] [main] [1079] [INFO ] The response status is 200
[2020-06-25T13:13:36.036Z] [com.netflix.discovery.DiscoveryClient] [main] [1294] [INFO ] Starting heartbeat executor: renew interval is: 30
[2020-06-25T13:13:36.036Z] [com.netflix.discovery.InstanceInfoReplicator] [main] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2020-06-25T13:13:36.036Z] [com.netflix.discovery.DiscoveryClient] [main] [468] [INFO ] Discovery Client initialized at timestamp 1593083616211 with initial instances count: 6
[2020-06-25T13:13:36.036Z] [com.netflix.config.sources.URLConfigurationSource] [main] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-06-25T13:13:36.036Z] [com.netflix.config.sources.URLConfigurationSource] [main] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-06-25T13:13:36.036Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [main] [181] [INFO ] Initializing ExecutorService 'applicationTaskExecutor'
[2020-06-25T13:13:36.036Z] [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger] [main] [86] [WARN ] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2020-06-25T13:13:36.036Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [main] [67] [INFO ] Starting filter initializer
[2020-06-25T13:13:36.036Z] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [main] [58] [INFO ] Exposing 2 endpoint(s) beneath base path '/actuator'
[2020-06-25T13:13:36.036Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [main] [41] [INFO ] Registering application ZUUL with eureka with status UP
[2020-06-25T13:13:36.036Z] [com.netflix.discovery.DiscoveryClient$3] [main] [1330] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1593083616767, current=UP, previous=STARTING]
[2020-06-25T13:13:36.036Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [847] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080: registering service...
[2020-06-25T13:13:36.036Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting ProtocolHandler ["https-jsse-nio-8080"]
[2020-06-25T13:13:36.036Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [856] [INFO ] DiscoveryClient_ZUUL/macbook-pro:zuul:8080 - registration status: 204
[2020-06-25T13:13:36.036Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [204] [INFO ] Tomcat started on port(s): 8080 (https) with context path '/api'
[2020-06-25T13:13:36.036Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] [main] [145] [INFO ] Updating port to 8080
[2020-06-25T13:13:36.036Z] [org.springframework.boot.StartupInfoLogger] [main] [61] [INFO ] Started ZuulApplication in 5.413 seconds (JVM running for 6.089)
[2020-06-25T13:13:37.037Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(7)-192.168.1.3] [173] [INFO ] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2020-06-25T13:13:37.037Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(7)-192.168.1.3] [525] [INFO ] Initializing Servlet 'dispatcherServlet'
[2020-06-25T13:13:37.037Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(7)-192.168.1.3] [547] [INFO ] Completed initialization in 15 ms
[2020-06-25T13:14:27.027Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-6] [53] [INFO ] GET request to https://localhost:8080/api/vehicle/hello
[2020-06-25T13:14:27.027Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-6] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T13:14:27.027Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [https-jsse-nio-8080-exec-6] [58] [INFO ] Shutdown hook installed for: NFLoadBalancer-PingTimer-auth
[2020-06-25T13:14:27.027Z] [com.netflix.loadbalancer.BaseLoadBalancer] [https-jsse-nio-8080-exec-6] [197] [INFO ] Client: auth instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2020-06-25T13:14:27.027Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-6] [222] [INFO ] Using serverListUpdater PollingServerListUpdater
[2020-06-25T13:14:27.027Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [https-jsse-nio-8080-exec-6] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T13:14:27.027Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [https-jsse-nio-8080-exec-6] [150] [INFO ] DynamicServerListLoadBalancer for client auth initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[192.168.1.3:8081],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.3:8081;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 01:00:00 CET 1970;	First connection made: Thu Jan 01 01:00:00 CET 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@746fb760
[2020-06-25T13:14:28.028Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [PollingServerListUpdater-0] [115] [INFO ] Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-06-25T13:14:33.033Z] [com.programatori.zuul.AuthFilter] [https-jsse-nio-8080-exec-9] [53] [INFO ] GET request to https://localhost:8080/api/vehicle/hello
[2020-06-25T13:18:36.036Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-06-25T13:23:36.036Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-06-25T13:30:46.046Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-06-25T13:35:46.046Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-06-25T13:40:46.046Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-06-25T13:45:46.046Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-06-25T13:50:46.046Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-06-25T13:55:46.046Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-06-25T14:00:46.046Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
