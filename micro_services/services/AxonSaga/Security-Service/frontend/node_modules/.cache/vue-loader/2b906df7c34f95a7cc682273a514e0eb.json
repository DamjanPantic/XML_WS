{"remainingRequest":"/Users/milutinzeljkovic/XML/XML_WS/micro_services/services/AxonSaga/Security-Service/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/milutinzeljkovic/XML/XML_WS/micro_services/services/AxonSaga/Security-Service/frontend/src/components/Bootstrap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/milutinzeljkovic/XML/XML_WS/micro_services/services/AxonSaga/Security-Service/frontend/src/components/Bootstrap.vue","mtime":1586808007000},{"path":"/Users/milutinzeljkovic/XML/XML_WS/micro_services/services/AxonSaga/Security-Service/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/milutinzeljkovic/XML/XML_WS/micro_services/services/AxonSaga/Security-Service/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/milutinzeljkovic/XML/XML_WS/micro_services/services/AxonSaga/Security-Service/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBhcGkgZnJvbSAnLi9iYWNrZW5kLWFwaScKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnYm9vdHN0cmFwJywKCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgICBtc2c6ICdOaWNlIEJvb3RzdHJhcCBjYW5keSEnLAogICAgICBzaG93UmVzcG9uc2U6IGZhbHNlLAogICAgICBiYWNrZW5kUmVzcG9uc2U6ICcnLAogICAgICBmdWxsUmVzcG9uc2U6IHsKICAgICAgICBjb25maWc6IHsKICAgICAgICAgIGZvbzogJycsCiAgICAgICAgICBiYXI6ICcnCiAgICAgICAgfQogICAgICB9LAogICAgICBodHRwU3RhdHVzQ29kZTogJycsCiAgICAgIGh0dHBTdGF0dXNUZXh0OiAnJywKICAgICAgaGVhZGVyczogWydOb3RpbmcgaGVyZSBhdG0uIERpZCB5b3UgY2FsbCB0aGUgU2VydmljZT8nXSwKICAgICAgZXJyb3JzOiBbXQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgY2FsbEhlbGxvQXBpICgpIHsKICAgICAgICBhcGkuaGVsbG8oKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgIHRoaXMuYmFja2VuZFJlc3BvbnNlID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICAgIHRoaXMuaHR0cFN0YXR1c0NvZGUgPSByZXNwb25zZS5zdGF0dXM7CiAgICAgICAgICB0aGlzLmh0dHBTdGF0dXNUZXh0ID0gcmVzcG9uc2Uuc3RhdHVzVGV4dDsKICAgICAgICAgIHRoaXMuaGVhZGVycyA9IHJlc3BvbnNlLmhlYWRlcnM7CiAgICAgICAgICB0aGlzLmZ1bGxSZXNwb25zZSA9IHJlc3BvbnNlOwogICAgICAgICAgdGhpcy5zaG93UmVzcG9uc2U9dHJ1ZQogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKGUgPT4gewogICAgICAgICAgdGhpcy5lcnJvcnMucHVzaChlKQogICAgICAgIH0pCiAgICB9CiAgfQp9Cgo="},{"version":3,"sources":["Bootstrap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Bootstrap.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"bootstrap\">\n    <h1>{{ msg }}</h1>\n    <h5>REST service call are easy to do with Vue.js, if you know how to do it.</h5>\n    <p></p>\n    <h6><b-badge variant=\"primary\"> LetÂ´s go!</b-badge> Call a Spring Boot REST backend service, by clicking a button:</h6>\n    <p></p>\n      <b-btn variant=\"success\" @click=\"callHelloApi()\" id=\"btnCallHello\">/hello (GET)</b-btn>\n      <p></p>\n    <h4>Backend response: <b-alert :show=\"showResponse\" dismissible @dismissed=\"showResponse=false\">{{ backendResponse }}</b-alert></h4>\n\n    <b-btn v-b-toggle.collapse1>Show Response details</b-btn>\n    <p></p>\n    <b-collapse id=\"collapse1\" class=\"mt-2\">\n      <b-card>\n        <p class=\"card-text\">The Response hat this details</p>\n        <b-btn v-b-toggle.collapse1_inner size=\"sm\" variant=\"primary\">HTTP Status</b-btn>\n        <b-collapse id=collapse1_inner class=\"mt-2\">\n          <b-card>Status: {{ httpStatusCode }}</b-card>\n          <b-card>Statustext: {{ httpStatusText }}</b-card>\n        </b-collapse>\n\n        <b-btn v-b-toggle.collapse2_inner size=\"sm\" id=\"btnHttpHeaders\" variant=\"warning\">HTTP Headers</b-btn>\n        <b-collapse id=collapse2_inner class=\"mt-2\">\n\n          <p v-if=\"headers && headers.length\">\n            <li v-for=\"header of headers\">\n            <b-card>Header: {{ header.valueOf() }}</b-card>\n            </li>\n          </p>\n        </b-collapse>\n\n        <b-btn v-b-toggle.collapse3_inner size=\"sm\" variant=\"danger\">Full Request configuration</b-btn>\n        <b-collapse id=collapse3_inner class=\"mt-2\">\n          <p class=\"card-text\">Config: {{ fullResponse.config }} </p>\n        </b-collapse>\n      </b-card>\n    </b-collapse>\n\n\n    <b-tooltip target=\"btnHttpHeaders\" title=\"You should always know your HTTP Headers!\"></b-tooltip>\n\n  </div>\n</template>\n\n<script>\nimport api from './backend-api'\n\nexport default {\n  name: 'bootstrap',\n\n  data () {\n    return {\n      msg: 'Nice Bootstrap candy!',\n      showResponse: false,\n      backendResponse: '',\n      fullResponse: {\n        config: {\n          foo: '',\n          bar: ''\n        }\n      },\n      httpStatusCode: '',\n      httpStatusText: '',\n      headers: ['Noting here atm. Did you call the Service?'],\n      errors: []\n    }\n  },\n  methods: {\n    callHelloApi () {\n        api.hello().then(response => {\n          this.backendResponse = response.data;\n          this.httpStatusCode = response.status;\n          this.httpStatusText = response.statusText;\n          this.headers = response.headers;\n          this.fullResponse = response;\n          this.showResponse=true\n        })\n        .catch(e => {\n          this.errors.push(e)\n        })\n    }\n  }\n}\n\n</script>\n\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\np {\n  margin-bottom: 20px;\n}\n\nh1, h2 {\n  font-weight: normal;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\n\na {\n  color: #42b983;\n}\n</style>\n"]}]}