{"remainingRequest":"/Users/milutinzeljkovic/Bezbednost/bsep-proj/frontend/node_modules/babel-loader/lib/index.js!/Users/milutinzeljkovic/Bezbednost/bsep-proj/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/milutinzeljkovic/Bezbednost/bsep-proj/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/milutinzeljkovic/Bezbednost/bsep-proj/frontend/src/components/Service.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/milutinzeljkovic/Bezbednost/bsep-proj/frontend/src/components/Service.vue","mtime":1586808007000},{"path":"/Users/milutinzeljkovic/Bezbednost/bsep-proj/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/milutinzeljkovic/Bezbednost/bsep-proj/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/milutinzeljkovic/Bezbednost/bsep-proj/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/milutinzeljkovic/Bezbednost/bsep-proj/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGFwaSBmcm9tICIuL2JhY2tlbmQtYXBpIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdzZXJ2aWNlJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbXNnOiAnSG93VG8gY2FsbCBSRVNULVNlcnZpY2VzOicsCiAgICAgIGJhY2tlbmRSZXNwb25zZTogW10sCiAgICAgIGVycm9yczogW10KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyBGZXRjaGVzIHBvc3RzIHdoZW4gdGhlIGNvbXBvbmVudCBpcyBjcmVhdGVkLgogICAgY2FsbEhlbGxvQXBpOiBmdW5jdGlvbiBjYWxsSGVsbG9BcGkoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBhcGkuaGVsbG8oKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzLmJhY2tlbmRSZXNwb25zZSA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIF90aGlzLmVycm9ycy5wdXNoKGVycm9yKTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Service.vue"],"names":[],"mappings":";;;;;;;;;;;;AAaA,OAAA,GAAA,MAAA,eAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,GAAA,EAAA,2BADA;AAEA,MAAA,eAAA,EAAA,EAFA;AAGA,MAAA,MAAA,EAAA;AAHA,KAAA;AAKA,GATA;AAUA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,YAFA,0BAEA;AAAA;;AACA,MAAA,GAAA,CAAA,KAAA,GAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,eAAA,GAAA,QAAA,CAAA,IAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA;AACA,OAHA,EAIA,KAJA,CAIA,UAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA;AACA,OANA;AAOA;AAVA;AAVA,CAAA","sourcesContent":["<template>\n  <div class=\"service\">\n    <h1>{{ msg }}</h1>\n    <h2>REST service call results</h2>\n\n    <button @click=\"callHelloApi()\">CALL Spring Boot REST backend service</button>\n\n    <h4>Backend response: {{ backendResponse }}</h4>\n\n  </div>\n</template>\n\n<script>\n  import api from \"./backend-api\";\n\n  export default {\n    name: 'service',\n\n    data () {\n      return {\n        msg: 'HowTo call REST-Services:',\n        backendResponse: [],\n        errors: []\n      }\n    },\n    methods: {\n      // Fetches posts when the component is created.\n      callHelloApi () {\n        api.hello().then(response => {\n            this.backendResponse = response.data;\n            console.log(response.data)\n        })\n        .catch(error => {\n          this.errors.push(error)\n        })\n      }\n    }\n  }\n\n</script>\n\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n  h1, h2 {\n    font-weight: normal;\n  }\n\n  ul {\n    list-style-type: none;\n    padding: 0;\n  }\n\n  li {\n    display: inline-block;\n    margin: 0 10px;\n  }\n\n  a {\n    color: #42b983;\n  }\n</style>\n"],"sourceRoot":"src/components"}]}